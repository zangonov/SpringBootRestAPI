2020-12-10 09:43:14,240 INFO org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [RMI TCP Connection(39)-127.0.0.1] Application shutdown requested.
2020-12-10 09:43:14,305 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [RMI TCP Connection(39)-127.0.0.1] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 09:43:14,308 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [RMI TCP Connection(39)-127.0.0.1] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-10 09:43:14,309 INFO com.zaxxer.hikari.HikariDataSource [RMI TCP Connection(39)-127.0.0.1] HikariPool-1 - Shutdown initiated...
2020-12-10 09:43:14,314 INFO com.zaxxer.hikari.HikariDataSource [RMI TCP Connection(39)-127.0.0.1] HikariPool-1 - Shutdown completed.
2020-12-10 09:43:21,769 INFO org.springframework.boot.StartupInfoLogger [main] Starting PracticaRicohApplication using Java 15 on zango-Laptop with PID 23717 (/home/jose/Documents/workspace/practica-ricoh/target/classes started by jose in /home/jose/Documents/workspace/practica-ricoh)
2020-12-10 09:43:21,771 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.0, Spring v5.3.1
2020-12-10 09:43:21,772 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-12-10 09:43:22,853 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-12-10 09:43:22,938 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 72 ms. Found 5 JPA repository interfaces.
2020-12-10 09:43:23,658 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2020-12-10 09:43:23,670 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-10 09:43:23,670 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-12-10 09:43:23,671 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-10 09:43:23,800 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-12-10 09:43:23,801 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1969 ms
2020-12-10 09:43:23,998 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-10 09:43:24,068 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-10 09:43:24,443 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2020-12-10 09:43:24,544 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-12-10 09:43:24,951 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2020-12-10 09:43:25,029 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@687e561b, org.springframework.security.web.context.SecurityContextPersistenceFilter@49925d21, org.springframework.security.web.header.HeaderWriterFilter@4b00d59, org.springframework.security.web.authentication.logout.LogoutFilter@2567c091, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@76eadc5a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46ee7013, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d7f7962, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@299786b1, org.springframework.security.web.session.SessionManagementFilter@309cf657, org.springframework.security.web.access.ExceptionTranslationFilter@59a2bed1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@76b642aa]
2020-12-10 09:43:25,106 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2020-12-10 09:43:25,167 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-10 09:43:25,168 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-12-10 09:43:25,213 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-12-10 09:43:25,319 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-12-10 09:43:25,810 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: getPedidosUsingGET_1
2020-12-10 09:43:25,848 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositoriesâ€¦
2020-12-10 09:43:26,140 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos add constraint FK8r1qc7hc6cptxa9ix70bq6s9i foreign key (id_catalogo) references catalogos (id)
2020-12-10 09:43:26,149 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FKompdlvftht1y6hrugptq64amu foreign key (articulo_id) references articulos (id)
2020-12-10 09:43:26,153 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FK1w5fxh8hfyqcy8fmq65cf486u foreign key (pedido_id) references pedidos (id)
2020-12-10 09:43:26,167 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 09:43:26,507 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-12-10 09:43:26,519 INFO org.springframework.boot.StartupInfoLogger [main] Started PracticaRicohApplication in 5.312 seconds (JVM running for 6.34)
2020-12-10 09:44:07,656 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-10 09:44:07,657 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Initializing Servlet 'dispatcherServlet'
2020-12-10 09:44:07,659 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Completed initialization in 2 ms
2020-12-10 09:44:17,670 DEBUG com.init.practica.rest.ArticulosREST [http-nio-8080-exec-3] ArticulosREST.getArticulos
2020-12-10 09:44:17,699 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [http-nio-8080-exec-3] ArticuloServiceImpl.findAll
2020-12-10 09:44:17,842 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] select articulo0_.id as id1_0_, articulo0_.id_catalogo as id_catal5_0_, articulo0_.descripcion as descripc2_0_, articulo0_.nombre as nombre3_0_, articulo0_.precio as precio4_0_ from articulos articulo0_
2020-12-10 09:44:17,884 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:44:17,891 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:44:17,896 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:44:26,334 DEBUG com.init.practica.rest.ArticulosREST [http-nio-8080-exec-4] ArticulosREST.getArticuloById 1
2020-12-10 09:44:26,336 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [http-nio-8080-exec-4] ArticuloServiceImpl.findById
2020-12-10 09:44:26,339 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 09:44:41,932 DEBUG com.init.practica.rest.ArticulosREST [http-nio-8080-exec-5] ArticulosREST.deleteArticulo 1
2020-12-10 09:44:41,935 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [http-nio-8080-exec-5] ArticuloServiceImpl.findById
2020-12-10 09:44:41,936 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 09:44:41,973 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] select a.* from articulos as a inner join articulos_pedidos as ap on ap.articulo_id = a.id where articulo_id =  ?
2020-12-10 09:44:49,460 DEBUG com.init.practica.rest.ArticulosREST [http-nio-8080-exec-7] ArticulosREST.deleteArticulo 7
2020-12-10 09:44:49,463 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [http-nio-8080-exec-7] ArticuloServiceImpl.findById
2020-12-10 09:44:49,464 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 09:45:10,448 DEBUG com.init.practica.rest.ArticulosREST [http-nio-8080-exec-6] ArticulosREST.deleteArticulo 6
2020-12-10 09:45:10,451 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [http-nio-8080-exec-6] ArticuloServiceImpl.findById
2020-12-10 09:45:10,453 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 09:45:10,460 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] select a.* from articulos as a inner join articulos_pedidos as ap on ap.articulo_id = a.id where articulo_id =  ?
2020-12-10 09:45:10,465 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [http-nio-8080-exec-6] ArticuloServiceImpl.delete 6
2020-12-10 09:45:10,498 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] delete from articulos where id=?
2020-12-10 09:45:17,703 DEBUG com.init.practica.rest.ArticulosREST [http-nio-8080-exec-8] ArticulosREST.getArticulos
2020-12-10 09:45:17,708 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [http-nio-8080-exec-8] ArticuloServiceImpl.findAll
2020-12-10 09:45:17,709 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] select articulo0_.id as id1_0_, articulo0_.id_catalogo as id_catal5_0_, articulo0_.descripcion as descripc2_0_, articulo0_.nombre as nombre3_0_, articulo0_.precio as precio4_0_ from articulos articulo0_
2020-12-10 09:45:17,715 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:45:17,725 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:45:23,093 INFO org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [RMI TCP Connection(4)-127.0.0.1] Application shutdown requested.
2020-12-10 09:45:23,175 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [RMI TCP Connection(4)-127.0.0.1] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 09:45:23,182 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [RMI TCP Connection(4)-127.0.0.1] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-10 09:45:23,184 INFO com.zaxxer.hikari.HikariDataSource [RMI TCP Connection(4)-127.0.0.1] HikariPool-1 - Shutdown initiated...
2020-12-10 09:45:23,204 INFO com.zaxxer.hikari.HikariDataSource [RMI TCP Connection(4)-127.0.0.1] HikariPool-1 - Shutdown completed.
2020-12-10 09:47:43,492 WARN org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer [main] 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/home/jose/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/home/jose/.m2/repository/org/json/json/20180130/json-20180130.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2020-12-10 09:47:43,524 INFO org.springframework.boot.StartupInfoLogger [main] Starting PracticaRicohApplicationTests using Java 15 on zango-Laptop with PID 23918 (started by jose in /home/jose/Documents/workspace/practica-ricoh)
2020-12-10 09:47:43,525 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.0, Spring v5.3.1
2020-12-10 09:47:43,530 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-12-10 09:47:44,893 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-12-10 09:47:44,991 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 89 ms. Found 5 JPA repository interfaces.
2020-12-10 09:47:45,960 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-10 09:47:46,125 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-10 09:47:46,424 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2020-12-10 09:47:46,993 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2020-12-10 09:47:47,090 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-12-10 09:47:48,202 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos add constraint FK8r1qc7hc6cptxa9ix70bq6s9i foreign key (id_catalogo) references catalogos (id)
2020-12-10 09:47:48,210 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FKompdlvftht1y6hrugptq64amu foreign key (articulo_id) references articulos (id)
2020-12-10 09:47:48,216 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FK1w5fxh8hfyqcy8fmq65cf486u foreign key (pedido_id) references pedidos (id)
2020-12-10 09:47:48,231 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 09:47:48,466 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2f262474, org.springframework.security.web.context.SecurityContextPersistenceFilter@7921a37d, org.springframework.security.web.header.HeaderWriterFilter@31dbf5bb, org.springframework.security.web.authentication.logout.LogoutFilter@73e399cc, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@188bf4d8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@68360fb9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7977f046, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c03f9d0, org.springframework.security.web.session.SessionManagementFilter@23933031, org.springframework.security.web.access.ExceptionTranslationFilter@4888d1ea, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3a7d914c]
2020-12-10 09:47:48,572 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-12-10 09:47:48,600 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-12-10 09:47:48,660 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-12-10 09:47:48,932 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: getPedidosUsingGET_1
2020-12-10 09:47:48,949 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositoriesâ€¦
2020-12-10 09:47:49,388 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-12-10 09:47:49,401 INFO org.springframework.boot.StartupInfoLogger [main] Started PracticaRicohApplicationTests in 6.498 seconds (JVM running for 8.032)
2020-12-10 09:47:49,641 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [main] PedidoServiceImpl.findAll 
2020-12-10 09:47:49,784 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select pedido0_.id as id1_3_, pedido0_.nombre as nombre2_3_, pedido0_.total as total3_3_ from pedidos pedido0_
2020-12-10 09:47:49,818 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select articulosp0_.pedido_id as pedido_i4_1_0_, articulosp0_.id as id1_1_0_, articulosp0_.id as id1_1_1_, articulosp0_.articulo_id as articulo3_1_1_, articulosp0_.cantidad as cantidad2_1_1_, articulosp0_.pedido_id as pedido_i4_1_1_, articulo1_.id as id1_0_2_, articulo1_.id_catalogo as id_catal5_0_2_, articulo1_.descripcion as descripc2_0_2_, articulo1_.nombre as nombre3_0_2_, articulo1_.precio as precio4_0_2_, catalogo2_.id as id1_2_3_, catalogo2_.nombre as nombre2_2_3_ from articulos_pedidos articulosp0_ left outer join articulos articulo1_ on articulosp0_.articulo_id=articulo1_.id left outer join catalogos catalogo2_ on articulo1_.id_catalogo=catalogo2_.id where articulosp0_.pedido_id=?
2020-12-10 09:47:49,887 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [main] ArticuloServiceImpl.findById
2020-12-10 09:47:49,892 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 09:47:49,899 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [main] ArticuloServiceImpl.update Articulo{id=1, nombre='Articulo 1', descripcion='descripcion modificada', catalogo='CatÃ¡logo bÃ¡sico'125
2020-12-10 09:47:49,902 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 09:47:49,924 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] update articulos set id_catalogo=?, descripcion=?, nombre=?, precio=? where id=?
2020-12-10 09:47:49,937 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [main] CatalogoServiceImpl.findById 1
2020-12-10 09:47:49,941 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:47:49,946 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [main] ArticuloServiceImpl.create
2020-12-10 09:47:49,951 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] insert into articulos (id_catalogo, descripcion, nombre, precio) values (?, ?, ?, ?)
2020-12-10 09:47:49,968 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [main] ArticuloServiceImpl.findAll
2020-12-10 09:47:49,973 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select articulo0_.id as id1_0_, articulo0_.id_catalogo as id_catal5_0_, articulo0_.descripcion as descripc2_0_, articulo0_.nombre as nombre3_0_, articulo0_.precio as precio4_0_ from articulos articulo0_
2020-12-10 09:47:49,977 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:47:49,980 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:47:49,982 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:47:49,991 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [main] CatalogoServiceImpl.findById 1
2020-12-10 09:47:49,995 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:47:49,999 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [main] CatalogoServiceImpl.update Catalogo{id=1', nombre='Catalogo modificado'}
2020-12-10 09:47:50,001 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:47:50,013 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:47:50,015 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] update catalogos set nombre=? where id=?
2020-12-10 09:47:50,022 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [main] CatalogoServiceImpl.findAll 
2020-12-10 09:47:50,026 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_, catalogo0_.nombre as nombre2_2_ from catalogos catalogo0_
2020-12-10 09:47:50,034 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [main] CatalogoServiceImpl.create Catalogo{id=null', nombre='catalogo creado'}
2020-12-10 09:47:50,035 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] insert into catalogos (nombre) values (?)
2020-12-10 09:47:50,043 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [main] ArticuloServiceImpl.findById
2020-12-10 09:47:50,044 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 09:47:50,050 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [main] ArticuloServiceImpl.delete 6
2020-12-10 09:47:50,052 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 09:47:50,062 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] delete from articulos where id=?
2020-12-10 09:47:50,074 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [main] ArticuloServiceImpl.findById
2020-12-10 09:47:50,075 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 09:47:50,084 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [main] CatalogoServiceImpl.findById 3
2020-12-10 09:47:50,085 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:47:50,088 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [main] CatalogoServiceImpl.deleteById 3
2020-12-10 09:47:50,178 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select * from articulos where id_catalogo = ?
2020-12-10 09:47:50,183 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:47:50,186 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] delete from catalogos where id=?
2020-12-10 09:47:50,195 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [main] PedidoServiceImpl.findById 1
2020-12-10 09:47:50,196 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select pedido0_.id as id1_3_0_, pedido0_.nombre as nombre2_3_0_, pedido0_.total as total3_3_0_, articulosp1_.pedido_id as pedido_i4_1_1_, articulosp1_.id as id1_1_1_, articulosp1_.id as id1_1_2_, articulosp1_.articulo_id as articulo3_1_2_, articulosp1_.cantidad as cantidad2_1_2_, articulosp1_.pedido_id as pedido_i4_1_2_, articulo2_.id as id1_0_3_, articulo2_.id_catalogo as id_catal5_0_3_, articulo2_.descripcion as descripc2_0_3_, articulo2_.nombre as nombre3_0_3_, articulo2_.precio as precio4_0_3_ from pedidos pedido0_ left outer join articulos_pedidos articulosp1_ on pedido0_.id=articulosp1_.pedido_id left outer join articulos articulo2_ on articulosp1_.articulo_id=articulo2_.id where pedido0_.id=?
2020-12-10 09:47:50,201 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:47:50,204 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:47:50,214 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [main] CatalogoServiceImpl.findById 1
2020-12-10 09:47:50,216 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:47:50,233 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringContextShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 09:47:50,236 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-10 09:47:50,238 INFO com.zaxxer.hikari.HikariDataSource [SpringContextShutdownHook] HikariPool-1 - Shutdown initiated...
2020-12-10 09:47:50,254 INFO com.zaxxer.hikari.HikariDataSource [SpringContextShutdownHook] HikariPool-1 - Shutdown completed.
2020-12-10 09:48:41,800 INFO org.springframework.boot.StartupInfoLogger [main] Starting PracticaRicohApplication using Java 15 on zango-Laptop with PID 24052 (/home/jose/Documents/workspace/practica-ricoh/target/classes started by jose in /home/jose/Documents/workspace/practica-ricoh)
2020-12-10 09:48:41,804 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.0, Spring v5.3.1
2020-12-10 09:48:41,809 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-12-10 09:48:42,825 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-12-10 09:48:42,903 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 66 ms. Found 5 JPA repository interfaces.
2020-12-10 09:48:43,544 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2020-12-10 09:48:43,554 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-10 09:48:43,555 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-12-10 09:48:43,555 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-10 09:48:43,659 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-12-10 09:48:43,660 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1786 ms
2020-12-10 09:48:43,830 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-10 09:48:43,908 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-10 09:48:44,275 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2020-12-10 09:48:44,521 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-12-10 09:48:44,834 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2020-12-10 09:48:45,211 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e23ee0e, org.springframework.security.web.context.SecurityContextPersistenceFilter@3275a47f, org.springframework.security.web.header.HeaderWriterFilter@49925d21, org.springframework.security.web.authentication.logout.LogoutFilter@6fc7e828, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@417446d9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2e0163cb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3e8afc2d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@b144175, org.springframework.security.web.session.SessionManagementFilter@46ee7013, org.springframework.security.web.access.ExceptionTranslationFilter@309cf657, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@508f4bb5]
2020-12-10 09:48:45,342 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2020-12-10 09:48:45,404 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-10 09:48:45,406 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-12-10 09:48:45,440 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-12-10 09:48:45,512 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-12-10 09:48:45,818 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: getPedidosUsingGET_1
2020-12-10 09:48:45,839 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositoriesâ€¦
2020-12-10 09:48:45,968 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos add constraint FK8r1qc7hc6cptxa9ix70bq6s9i foreign key (id_catalogo) references catalogos (id)
2020-12-10 09:48:45,976 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FKompdlvftht1y6hrugptq64amu foreign key (articulo_id) references articulos (id)
2020-12-10 09:48:45,980 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FK1w5fxh8hfyqcy8fmq65cf486u foreign key (pedido_id) references pedidos (id)
2020-12-10 09:48:45,992 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 09:48:46,288 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-12-10 09:48:46,299 INFO org.springframework.boot.StartupInfoLogger [main] Started PracticaRicohApplication in 5.024 seconds (JVM running for 5.876)
2020-12-10 09:49:27,307 WARN org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer [main] 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/home/jose/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/home/jose/.m2/repository/org/json/json/20180130/json-20180130.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2020-12-10 09:49:27,347 INFO org.springframework.boot.StartupInfoLogger [main] Starting RepostoriesTest using Java 15 on zango-Laptop with PID 24156 (started by jose in /home/jose/Documents/workspace/practica-ricoh)
2020-12-10 09:49:27,348 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.0, Spring v5.3.1
2020-12-10 09:49:27,353 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-12-10 09:49:28,849 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-12-10 09:49:28,944 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 84 ms. Found 5 JPA repository interfaces.
2020-12-10 09:49:29,780 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-10 09:49:29,964 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-10 09:49:30,387 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2020-12-10 09:49:31,009 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2020-12-10 09:49:31,141 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-12-10 09:49:32,349 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos add constraint FK8r1qc7hc6cptxa9ix70bq6s9i foreign key (id_catalogo) references catalogos (id)
2020-12-10 09:49:32,359 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FKompdlvftht1y6hrugptq64amu foreign key (articulo_id) references articulos (id)
2020-12-10 09:49:32,365 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FK1w5fxh8hfyqcy8fmq65cf486u foreign key (pedido_id) references pedidos (id)
2020-12-10 09:49:32,382 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 09:49:32,393 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@27ec74a3, org.springframework.security.web.context.SecurityContextPersistenceFilter@3ba5c4dd, org.springframework.security.web.header.HeaderWriterFilter@26712838, org.springframework.security.web.authentication.logout.LogoutFilter@79ec57b8, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@409395b9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6a0c7af6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@186dcb05, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@35ff072c, org.springframework.security.web.session.SessionManagementFilter@11978f52, org.springframework.security.web.access.ExceptionTranslationFilter@67784537, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@627d35ff]
2020-12-10 09:49:32,498 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-12-10 09:49:32,519 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-12-10 09:49:32,572 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-12-10 09:49:32,869 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: getPedidosUsingGET_1
2020-12-10 09:49:32,885 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositoriesâ€¦
2020-12-10 09:49:33,403 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-12-10 09:49:33,416 INFO org.springframework.boot.StartupInfoLogger [main] Started RepostoriesTest in 6.712 seconds (JVM running for 8.086)
2020-12-10 09:49:33,654 INFO org.springframework.mock.web.MockServletContext [main] Initializing Spring TestDispatcherServlet ''
2020-12-10 09:49:33,654 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2020-12-10 09:49:33,656 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 1 ms
2020-12-10 09:49:33,701 DEBUG com.init.practica.rest.CatalogosREST [main] CatalogosREST.getCatalogoloById 1
2020-12-10 09:49:33,702 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [main] CatalogoServiceImpl.findById 1
2020-12-10 09:49:33,734 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:49:33,829 INFO org.springframework.mock.web.MockServletContext [main] Initializing Spring TestDispatcherServlet ''
2020-12-10 09:49:33,829 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2020-12-10 09:49:33,831 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 2 ms
2020-12-10 09:49:33,832 DEBUG com.init.practica.rest.CatalogosREST [main] CatalogosREST.getCatalogos 
2020-12-10 09:49:33,833 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [main] CatalogoServiceImpl.findAll 
2020-12-10 09:49:33,962 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_, catalogo0_.nombre as nombre2_2_ from catalogos catalogo0_
2020-12-10 09:49:33,988 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringContextShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 09:49:33,990 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-10 09:49:33,990 INFO com.zaxxer.hikari.HikariDataSource [SpringContextShutdownHook] HikariPool-1 - Shutdown initiated...
2020-12-10 09:49:34,000 INFO com.zaxxer.hikari.HikariDataSource [SpringContextShutdownHook] HikariPool-1 - Shutdown completed.
2020-12-10 09:51:19,253 WARN org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer [main] 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/home/jose/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/home/jose/.m2/repository/org/json/json/20180130/json-20180130.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2020-12-10 09:51:19,282 INFO org.springframework.boot.StartupInfoLogger [main] Starting RepostoriesTest using Java 15 on zango-Laptop with PID 24299 (started by jose in /home/jose/Documents/workspace/practica-ricoh)
2020-12-10 09:51:19,283 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.0, Spring v5.3.1
2020-12-10 09:51:19,287 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-12-10 09:51:20,610 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-12-10 09:51:20,698 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 72 ms. Found 5 JPA repository interfaces.
2020-12-10 09:51:21,428 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-10 09:51:21,570 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-10 09:51:21,959 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2020-12-10 09:51:22,483 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-12-10 09:51:22,638 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2020-12-10 09:51:23,689 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a69014e, org.springframework.security.web.context.SecurityContextPersistenceFilter@29bd056a, org.springframework.security.web.header.HeaderWriterFilter@46e6458d, org.springframework.security.web.authentication.logout.LogoutFilter@5e9ea380, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5d7ff311, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5c9e3d01, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1e000a17, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@27746c5e, org.springframework.security.web.session.SessionManagementFilter@672d8370, org.springframework.security.web.access.ExceptionTranslationFilter@76ed7573, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@51fb5fe6]
2020-12-10 09:51:23,776 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos add constraint FK8r1qc7hc6cptxa9ix70bq6s9i foreign key (id_catalogo) references catalogos (id)
2020-12-10 09:51:23,787 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FKompdlvftht1y6hrugptq64amu foreign key (articulo_id) references articulos (id)
2020-12-10 09:51:23,794 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FK1w5fxh8hfyqcy8fmq65cf486u foreign key (pedido_id) references pedidos (id)
2020-12-10 09:51:23,797 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-12-10 09:51:23,811 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 09:51:23,825 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-12-10 09:51:23,884 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-12-10 09:51:24,201 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: getPedidosUsingGET_1
2020-12-10 09:51:24,219 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositoriesâ€¦
2020-12-10 09:51:24,630 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-12-10 09:51:24,639 INFO org.springframework.boot.StartupInfoLogger [main] Started RepostoriesTest in 5.929 seconds (JVM running for 7.296)
2020-12-10 09:51:24,843 INFO org.springframework.mock.web.MockServletContext [main] Initializing Spring TestDispatcherServlet ''
2020-12-10 09:51:24,843 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2020-12-10 09:51:24,845 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 2 ms
2020-12-10 09:51:24,879 DEBUG com.init.practica.rest.ArticulosREST [main] ArticulosREST.getArticulos
2020-12-10 09:51:24,899 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [main] ArticuloServiceImpl.findAll
2020-12-10 09:51:25,036 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select articulo0_.id as id1_0_, articulo0_.id_catalogo as id_catal5_0_, articulo0_.descripcion as descripc2_0_, articulo0_.nombre as nombre3_0_, articulo0_.precio as precio4_0_ from articulos articulo0_
2020-12-10 09:51:25,075 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:51:25,082 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:51:25,112 INFO org.springframework.mock.web.MockServletContext [main] Initializing Spring TestDispatcherServlet ''
2020-12-10 09:51:25,113 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2020-12-10 09:51:25,114 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 1 ms
2020-12-10 09:51:25,123 DEBUG com.init.practica.rest.ArticulosREST [main] ArticulosREST.getArticuloById 1
2020-12-10 09:51:25,125 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [main] ArticuloServiceImpl.findById
2020-12-10 09:51:25,129 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 09:51:25,199 INFO org.springframework.mock.web.MockServletContext [main] Initializing Spring TestDispatcherServlet ''
2020-12-10 09:51:25,199 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2020-12-10 09:51:25,201 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 1 ms
2020-12-10 09:51:25,204 DEBUG com.init.practica.rest.CatalogosREST [main] CatalogosREST.getCatalogoloById 1
2020-12-10 09:51:25,204 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [main] CatalogoServiceImpl.findById 1
2020-12-10 09:51:25,207 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:51:25,218 INFO org.springframework.mock.web.MockServletContext [main] Initializing Spring TestDispatcherServlet ''
2020-12-10 09:51:25,218 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2020-12-10 09:51:25,220 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 2 ms
2020-12-10 09:51:25,221 DEBUG com.init.practica.rest.CatalogosREST [main] CatalogosREST.getCatalogos 
2020-12-10 09:51:25,221 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [main] CatalogoServiceImpl.findAll 
2020-12-10 09:51:25,228 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_, catalogo0_.nombre as nombre2_2_ from catalogos catalogo0_
2020-12-10 09:51:25,256 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringContextShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 09:51:25,259 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-10 09:51:25,260 INFO com.zaxxer.hikari.HikariDataSource [SpringContextShutdownHook] HikariPool-1 - Shutdown initiated...
2020-12-10 09:51:25,272 INFO com.zaxxer.hikari.HikariDataSource [SpringContextShutdownHook] HikariPool-1 - Shutdown completed.
2020-12-10 09:52:48,247 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-10 09:52:48,248 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Initializing Servlet 'dispatcherServlet'
2020-12-10 09:52:48,249 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Completed initialization in 1 ms
2020-12-10 09:52:48,611 DEBUG com.init.practica.rest.ArticulosREST [http-nio-8080-exec-2] ArticulosREST.getArticuloById 1
2020-12-10 09:52:48,634 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [http-nio-8080-exec-2] ArticuloServiceImpl.findById
2020-12-10 09:52:48,659 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 09:53:00,074 DEBUG com.init.practica.rest.ArticulosREST [http-nio-8080-exec-3] ArticulosREST.getArticulos
2020-12-10 09:53:00,076 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [http-nio-8080-exec-3] ArticuloServiceImpl.findAll
2020-12-10 09:53:00,222 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] select articulo0_.id as id1_0_, articulo0_.id_catalogo as id_catal5_0_, articulo0_.descripcion as descripc2_0_, articulo0_.nombre as nombre3_0_, articulo0_.precio as precio4_0_ from articulos articulo0_
2020-12-10 09:53:00,233 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:53:00,237 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:53:00,263 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.orm.jpa.JpaSystemException: Null value was assigned to a property [class com.init.practica.entities.Articulo.precio] of primitive type setter of com.init.practica.entities.Articulo.precio; nested exception is org.hibernate.PropertyAccessException: Null value was assigned to a property [class com.init.practica.entities.Articulo.precio] of primitive type setter of com.init.practica.entities.Articulo.precio] with root cause
java.lang.IllegalArgumentException: Can not set float field com.init.practica.entities.Articulo.precio to null value
	at java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167)
	at java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171)
	at java.base/jdk.internal.reflect.UnsafeFloatFieldAccessorImpl.set(UnsafeFloatFieldAccessorImpl.java:80)
	at java.base/java.lang.reflect.Field.set(Field.java:793)
	at org.hibernate.property.access.spi.SetterFieldImpl.set(SetterFieldImpl.java:52)
	at org.hibernate.tuple.entity.AbstractEntityTuplizer.setPropertyValues(AbstractEntityTuplizer.java:681)
	at org.hibernate.tuple.entity.PojoEntityTuplizer.setPropertyValues(PojoEntityTuplizer.java:144)
	at org.hibernate.persister.entity.AbstractEntityPersister.setPropertyValues(AbstractEntityPersister.java:5118)
	at org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityFromEntityEntryLoadedState(TwoPhaseLoad.java:282)
	at org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:183)
	at org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:151)
	at org.hibernate.loader.Loader.initializeEntitiesAndCollections(Loader.java:1200)
	at org.hibernate.loader.Loader.processResultSet(Loader.java:1001)
	at org.hibernate.loader.Loader.doQuery(Loader.java:959)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1414)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1565)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1533)
	at org.hibernate.query.Query.getResultList(Query.java:165)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getResultList(CriteriaQueryTypeQueryAdapter.java:76)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:356)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:524)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:531)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:156)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:131)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:371)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy125.findAll(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy78.findAll(Unknown Source)
	at com.init.practica.service.Impl.ArticuloServiceImpl.findAll(ArticuloServiceImpl.java:28)
	at com.init.practica.service.Impl.ArticuloServiceImpl$$FastClassBySpringCGLIB$$522f56b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:371)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.init.practica.service.Impl.ArticuloServiceImpl$$EnhancerBySpringCGLIB$$646e407f.findAll(<generated>)
	at com.init.practica.rest.ArticulosREST.getArticulos(ArticulosREST.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:178)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-12-10 09:53:50,453 WARN org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer [main] 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/home/jose/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/home/jose/.m2/repository/org/json/json/20180130/json-20180130.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2020-12-10 09:53:50,480 INFO org.springframework.boot.StartupInfoLogger [main] Starting PracticaRicohApplicationTests using Java 15 on zango-Laptop with PID 24448 (started by jose in /home/jose/Documents/workspace/practica-ricoh)
2020-12-10 09:53:50,482 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.0, Spring v5.3.1
2020-12-10 09:53:50,486 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-12-10 09:53:51,858 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-12-10 09:53:51,965 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 95 ms. Found 5 JPA repository interfaces.
2020-12-10 09:53:52,710 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-10 09:53:52,850 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-10 09:53:53,221 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2020-12-10 09:53:53,809 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2020-12-10 09:53:53,829 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-12-10 09:53:54,967 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos add constraint FK8r1qc7hc6cptxa9ix70bq6s9i foreign key (id_catalogo) references catalogos (id)
2020-12-10 09:53:54,975 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FKompdlvftht1y6hrugptq64amu foreign key (articulo_id) references articulos (id)
2020-12-10 09:53:54,981 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FK1w5fxh8hfyqcy8fmq65cf486u foreign key (pedido_id) references pedidos (id)
2020-12-10 09:53:54,995 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 09:53:55,116 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1f547af8, org.springframework.security.web.context.SecurityContextPersistenceFilter@415262a0, org.springframework.security.web.header.HeaderWriterFilter@43090195, org.springframework.security.web.authentication.logout.LogoutFilter@1b3bb287, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@bdda8a7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3d02ff64, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@603c2dee, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4caf875c, org.springframework.security.web.session.SessionManagementFilter@6338afe2, org.springframework.security.web.access.ExceptionTranslationFilter@31dbf5bb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@12404f9d]
2020-12-10 09:53:55,205 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-12-10 09:53:55,226 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-12-10 09:53:55,273 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-12-10 09:53:55,558 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: getPedidosUsingGET_1
2020-12-10 09:53:55,578 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositoriesâ€¦
2020-12-10 09:53:55,991 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-12-10 09:53:56,001 INFO org.springframework.boot.StartupInfoLogger [main] Started PracticaRicohApplicationTests in 5.982 seconds (JVM running for 7.463)
2020-12-10 09:53:56,253 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [main] ArticuloServiceImpl.findAll
2020-12-10 09:53:56,390 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select articulo0_.id as id1_0_, articulo0_.id_catalogo as id_catal5_0_, articulo0_.descripcion as descripc2_0_, articulo0_.nombre as nombre3_0_, articulo0_.precio as precio4_0_ from articulos articulo0_
2020-12-10 09:53:56,429 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:53:56,436 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:53:56,484 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringContextShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 09:53:56,488 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-10 09:53:56,489 INFO com.zaxxer.hikari.HikariDataSource [SpringContextShutdownHook] HikariPool-1 - Shutdown initiated...
2020-12-10 09:53:56,499 INFO com.zaxxer.hikari.HikariDataSource [SpringContextShutdownHook] HikariPool-1 - Shutdown completed.
2020-12-10 09:55:03,799 DEBUG com.init.practica.rest.ArticulosREST [http-nio-8080-exec-5] ArticulosREST.getArticulos
2020-12-10 09:55:03,802 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [http-nio-8080-exec-5] ArticuloServiceImpl.findAll
2020-12-10 09:55:03,804 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] select articulo0_.id as id1_0_, articulo0_.id_catalogo as id_catal5_0_, articulo0_.descripcion as descripc2_0_, articulo0_.nombre as nombre3_0_, articulo0_.precio as precio4_0_ from articulos articulo0_
2020-12-10 09:55:03,808 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:55:03,812 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:55:03,815 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:55:30,470 WARN org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer [main] 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/home/jose/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/home/jose/.m2/repository/org/json/json/20180130/json-20180130.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2020-12-10 09:55:30,498 INFO org.springframework.boot.StartupInfoLogger [main] Starting RepostoriesTest using Java 15 on zango-Laptop with PID 24532 (started by jose in /home/jose/Documents/workspace/practica-ricoh)
2020-12-10 09:55:30,499 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.0, Spring v5.3.1
2020-12-10 09:55:30,504 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-12-10 09:55:31,873 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-12-10 09:55:31,975 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 90 ms. Found 5 JPA repository interfaces.
2020-12-10 09:55:32,752 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-10 09:55:32,901 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-10 09:55:33,218 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2020-12-10 09:55:33,839 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2020-12-10 09:55:33,940 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-12-10 09:55:35,136 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos add constraint FK8r1qc7hc6cptxa9ix70bq6s9i foreign key (id_catalogo) references catalogos (id)
2020-12-10 09:55:35,147 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FKompdlvftht1y6hrugptq64amu foreign key (articulo_id) references articulos (id)
2020-12-10 09:55:35,154 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FK1w5fxh8hfyqcy8fmq65cf486u foreign key (pedido_id) references pedidos (id)
2020-12-10 09:55:35,171 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 09:55:35,309 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3395c2a7, org.springframework.security.web.context.SecurityContextPersistenceFilter@13137835, org.springframework.security.web.header.HeaderWriterFilter@7c0b0bd9, org.springframework.security.web.authentication.logout.LogoutFilter@7a274521, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1d8dbf10, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@29bd056a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7bb25046, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5e05a706, org.springframework.security.web.session.SessionManagementFilter@46e6458d, org.springframework.security.web.access.ExceptionTranslationFilter@3749c2b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5c2a3f0c]
2020-12-10 09:55:35,409 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-12-10 09:55:35,432 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-12-10 09:55:35,487 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-12-10 09:55:35,774 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: getPedidosUsingGET_1
2020-12-10 09:55:35,790 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositoriesâ€¦
2020-12-10 09:55:36,213 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-12-10 09:55:36,222 INFO org.springframework.boot.StartupInfoLogger [main] Started RepostoriesTest in 6.267 seconds (JVM running for 7.458)
2020-12-10 09:55:36,484 INFO org.springframework.mock.web.MockServletContext [main] Initializing Spring TestDispatcherServlet ''
2020-12-10 09:55:36,484 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2020-12-10 09:55:36,486 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 1 ms
2020-12-10 09:55:36,526 DEBUG com.init.practica.rest.ArticulosREST [main] ArticulosREST.getArticulos
2020-12-10 09:55:36,548 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [main] ArticuloServiceImpl.findAll
2020-12-10 09:55:36,678 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select articulo0_.id as id1_0_, articulo0_.id_catalogo as id_catal5_0_, articulo0_.descripcion as descripc2_0_, articulo0_.nombre as nombre3_0_, articulo0_.precio as precio4_0_ from articulos articulo0_
2020-12-10 09:55:36,717 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:55:36,727 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:55:36,729 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:55:36,798 INFO org.springframework.mock.web.MockServletContext [main] Initializing Spring TestDispatcherServlet ''
2020-12-10 09:55:36,799 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2020-12-10 09:55:36,800 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 1 ms
2020-12-10 09:55:36,809 DEBUG com.init.practica.rest.ArticulosREST [main] ArticulosREST.getArticuloById 1
2020-12-10 09:55:36,811 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [main] ArticuloServiceImpl.findById
2020-12-10 09:55:36,814 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 09:55:36,826 INFO org.springframework.mock.web.MockServletContext [main] Initializing Spring TestDispatcherServlet ''
2020-12-10 09:55:36,826 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2020-12-10 09:55:36,828 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 2 ms
2020-12-10 09:55:36,829 DEBUG com.init.practica.rest.CatalogosREST [main] CatalogosREST.getCatalogoloById 1
2020-12-10 09:55:36,830 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [main] CatalogoServiceImpl.findById 1
2020-12-10 09:55:36,832 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:55:36,842 INFO org.springframework.mock.web.MockServletContext [main] Initializing Spring TestDispatcherServlet ''
2020-12-10 09:55:36,842 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2020-12-10 09:55:36,843 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 1 ms
2020-12-10 09:55:36,845 DEBUG com.init.practica.rest.CatalogosREST [main] CatalogosREST.getCatalogos 
2020-12-10 09:55:36,845 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [main] CatalogoServiceImpl.findAll 
2020-12-10 09:55:36,851 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_, catalogo0_.nombre as nombre2_2_ from catalogos catalogo0_
2020-12-10 09:55:36,883 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringContextShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 09:55:36,887 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-10 09:55:36,888 INFO com.zaxxer.hikari.HikariDataSource [SpringContextShutdownHook] HikariPool-1 - Shutdown initiated...
2020-12-10 09:55:36,902 INFO com.zaxxer.hikari.HikariDataSource [SpringContextShutdownHook] HikariPool-1 - Shutdown completed.
2020-12-10 09:56:31,964 WARN org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer [main] 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/home/jose/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/home/jose/.m2/repository/org/json/json/20180130/json-20180130.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2020-12-10 09:56:31,992 INFO org.springframework.boot.StartupInfoLogger [main] Starting RepostoriesTest using Java 15 on zango-Laptop with PID 24645 (started by jose in /home/jose/Documents/workspace/practica-ricoh)
2020-12-10 09:56:31,993 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.0, Spring v5.3.1
2020-12-10 09:56:32,001 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-12-10 09:56:33,639 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-12-10 09:56:33,779 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 126 ms. Found 5 JPA repository interfaces.
2020-12-10 09:56:34,773 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-10 09:56:35,009 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-10 09:56:35,391 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2020-12-10 09:56:36,093 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2020-12-10 09:56:36,472 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-12-10 09:56:37,517 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos add constraint FK8r1qc7hc6cptxa9ix70bq6s9i foreign key (id_catalogo) references catalogos (id)
2020-12-10 09:56:37,545 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FKompdlvftht1y6hrugptq64amu foreign key (articulo_id) references articulos (id)
2020-12-10 09:56:37,551 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FK1w5fxh8hfyqcy8fmq65cf486u foreign key (pedido_id) references pedidos (id)
2020-12-10 09:56:37,579 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 09:56:37,946 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7831d1aa, org.springframework.security.web.context.SecurityContextPersistenceFilter@22002459, org.springframework.security.web.header.HeaderWriterFilter@49f50c8f, org.springframework.security.web.authentication.logout.LogoutFilter@35841d6, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4ad3969, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7f1fec57, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@126af200, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a69014e, org.springframework.security.web.session.SessionManagementFilter@65d6640, org.springframework.security.web.access.ExceptionTranslationFilter@64d93096, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5d93ff21]
2020-12-10 09:56:38,054 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-12-10 09:56:38,079 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-12-10 09:56:38,132 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-12-10 09:56:38,443 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: getPedidosUsingGET_1
2020-12-10 09:56:38,464 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositoriesâ€¦
2020-12-10 09:56:38,989 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-12-10 09:56:39,003 INFO org.springframework.boot.StartupInfoLogger [main] Started RepostoriesTest in 7.704 seconds (JVM running for 9.11)
2020-12-10 09:56:39,271 INFO org.springframework.mock.web.MockServletContext [main] Initializing Spring TestDispatcherServlet ''
2020-12-10 09:56:39,272 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2020-12-10 09:56:39,275 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 3 ms
2020-12-10 09:56:39,327 DEBUG com.init.practica.rest.ArticulosREST [main] ArticulosREST.getArticulos
2020-12-10 09:56:39,352 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [main] ArticuloServiceImpl.findAll
2020-12-10 09:56:39,557 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select articulo0_.id as id1_0_, articulo0_.id_catalogo as id_catal5_0_, articulo0_.descripcion as descripc2_0_, articulo0_.nombre as nombre3_0_, articulo0_.precio as precio4_0_ from articulos articulo0_
2020-12-10 09:56:39,611 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:56:39,621 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:56:39,626 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:56:39,714 INFO org.springframework.mock.web.MockServletContext [main] Initializing Spring TestDispatcherServlet ''
2020-12-10 09:56:39,715 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2020-12-10 09:56:39,717 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 2 ms
2020-12-10 09:56:39,720 DEBUG com.init.practica.rest.PedidosREST [main] PedidosREST.getPedidos 
2020-12-10 09:56:39,731 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [main] PedidoServiceImpl.findAll 
2020-12-10 09:56:39,738 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select pedido0_.id as id1_3_, pedido0_.nombre as nombre2_3_, pedido0_.total as total3_3_ from pedidos pedido0_
2020-12-10 09:56:39,744 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select articulosp0_.pedido_id as pedido_i4_1_0_, articulosp0_.id as id1_1_0_, articulosp0_.id as id1_1_1_, articulosp0_.articulo_id as articulo3_1_1_, articulosp0_.cantidad as cantidad2_1_1_, articulosp0_.pedido_id as pedido_i4_1_1_, articulo1_.id as id1_0_2_, articulo1_.id_catalogo as id_catal5_0_2_, articulo1_.descripcion as descripc2_0_2_, articulo1_.nombre as nombre3_0_2_, articulo1_.precio as precio4_0_2_, catalogo2_.id as id1_2_3_, catalogo2_.nombre as nombre2_2_3_ from articulos_pedidos articulosp0_ left outer join articulos articulo1_ on articulosp0_.articulo_id=articulo1_.id left outer join catalogos catalogo2_ on articulo1_.id_catalogo=catalogo2_.id where articulosp0_.pedido_id=?
2020-12-10 09:56:39,802 INFO org.springframework.mock.web.MockServletContext [main] Initializing Spring TestDispatcherServlet ''
2020-12-10 09:56:39,802 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2020-12-10 09:56:39,804 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 2 ms
2020-12-10 09:56:39,815 DEBUG com.init.practica.rest.ArticulosREST [main] ArticulosREST.getArticuloById 1
2020-12-10 09:56:39,817 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [main] ArticuloServiceImpl.findById
2020-12-10 09:56:39,821 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 09:56:39,836 INFO org.springframework.mock.web.MockServletContext [main] Initializing Spring TestDispatcherServlet ''
2020-12-10 09:56:39,836 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2020-12-10 09:56:39,838 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 2 ms
2020-12-10 09:56:39,842 DEBUG com.init.practica.rest.CatalogosREST [main] CatalogosREST.getCatalogoloById 1
2020-12-10 09:56:39,842 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [main] CatalogoServiceImpl.findById 1
2020-12-10 09:56:39,847 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:56:39,859 INFO org.springframework.mock.web.MockServletContext [main] Initializing Spring TestDispatcherServlet ''
2020-12-10 09:56:39,859 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2020-12-10 09:56:39,861 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 2 ms
2020-12-10 09:56:39,863 DEBUG com.init.practica.rest.CatalogosREST [main] CatalogosREST.getCatalogos 
2020-12-10 09:56:39,864 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [main] CatalogoServiceImpl.findAll 
2020-12-10 09:56:39,869 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_, catalogo0_.nombre as nombre2_2_ from catalogos catalogo0_
2020-12-10 09:56:39,882 INFO org.springframework.mock.web.MockServletContext [main] Initializing Spring TestDispatcherServlet ''
2020-12-10 09:56:39,883 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2020-12-10 09:56:39,885 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 2 ms
2020-12-10 09:56:39,887 DEBUG com.init.practica.rest.PedidosREST [main] PedidosREST.getPedidoById 1
2020-12-10 09:56:39,889 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [main] PedidoServiceImpl.findById 1
2020-12-10 09:56:39,891 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select pedido0_.id as id1_3_0_, pedido0_.nombre as nombre2_3_0_, pedido0_.total as total3_3_0_, articulosp1_.pedido_id as pedido_i4_1_1_, articulosp1_.id as id1_1_1_, articulosp1_.id as id1_1_2_, articulosp1_.articulo_id as articulo3_1_2_, articulosp1_.cantidad as cantidad2_1_2_, articulosp1_.pedido_id as pedido_i4_1_2_, articulo2_.id as id1_0_3_, articulo2_.id_catalogo as id_catal5_0_3_, articulo2_.descripcion as descripc2_0_3_, articulo2_.nombre as nombre3_0_3_, articulo2_.precio as precio4_0_3_ from pedidos pedido0_ left outer join articulos_pedidos articulosp1_ on pedido0_.id=articulosp1_.pedido_id left outer join articulos articulo2_ on articulosp1_.articulo_id=articulo2_.id where pedido0_.id=?
2020-12-10 09:56:39,896 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:56:39,899 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 09:56:39,939 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringContextShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 09:56:39,943 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-10 09:56:39,947 INFO com.zaxxer.hikari.HikariDataSource [SpringContextShutdownHook] HikariPool-1 - Shutdown initiated...
2020-12-10 09:56:39,964 INFO com.zaxxer.hikari.HikariDataSource [SpringContextShutdownHook] HikariPool-1 - Shutdown completed.
2020-12-10 10:00:47,479 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-8] PedidosREST.getPedidoById 1
2020-12-10 10:00:47,486 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-8] PedidoServiceImpl.findById 1
2020-12-10 10:00:47,488 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] select pedido0_.id as id1_3_0_, pedido0_.nombre as nombre2_3_0_, pedido0_.total as total3_3_0_, articulosp1_.pedido_id as pedido_i4_1_1_, articulosp1_.id as id1_1_1_, articulosp1_.id as id1_1_2_, articulosp1_.articulo_id as articulo3_1_2_, articulosp1_.cantidad as cantidad2_1_2_, articulosp1_.pedido_id as pedido_i4_1_2_, articulo2_.id as id1_0_3_, articulo2_.id_catalogo as id_catal5_0_3_, articulo2_.descripcion as descripc2_0_3_, articulo2_.nombre as nombre3_0_3_, articulo2_.precio as precio4_0_3_ from pedidos pedido0_ left outer join articulos_pedidos articulosp1_ on pedido0_.id=articulosp1_.pedido_id left outer join articulos articulo2_ on articulosp1_.articulo_id=articulo2_.id where pedido0_.id=?
2020-12-10 10:00:47,494 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 10:00:47,496 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 10:00:49,159 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-10] PedidosREST.getPedidos 
2020-12-10 10:00:49,160 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-10] PedidoServiceImpl.findAll 
2020-12-10 10:00:49,165 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] select pedido0_.id as id1_3_, pedido0_.nombre as nombre2_3_, pedido0_.total as total3_3_ from pedidos pedido0_
2020-12-10 10:00:49,168 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] select articulosp0_.pedido_id as pedido_i4_1_0_, articulosp0_.id as id1_1_0_, articulosp0_.id as id1_1_1_, articulosp0_.articulo_id as articulo3_1_1_, articulosp0_.cantidad as cantidad2_1_1_, articulosp0_.pedido_id as pedido_i4_1_1_, articulo1_.id as id1_0_2_, articulo1_.id_catalogo as id_catal5_0_2_, articulo1_.descripcion as descripc2_0_2_, articulo1_.nombre as nombre3_0_2_, articulo1_.precio as precio4_0_2_, catalogo2_.id as id1_2_3_, catalogo2_.nombre as nombre2_2_3_ from articulos_pedidos articulosp0_ left outer join articulos articulo1_ on articulosp0_.articulo_id=articulo1_.id left outer join catalogos catalogo2_ on articulo1_.id_catalogo=catalogo2_.id where articulosp0_.pedido_id=?
2020-12-10 10:00:51,064 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-2] PedidosREST.getPedidoById 1
2020-12-10 10:00:51,066 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-2] PedidoServiceImpl.findById 1
2020-12-10 10:00:51,067 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] select pedido0_.id as id1_3_0_, pedido0_.nombre as nombre2_3_0_, pedido0_.total as total3_3_0_, articulosp1_.pedido_id as pedido_i4_1_1_, articulosp1_.id as id1_1_1_, articulosp1_.id as id1_1_2_, articulosp1_.articulo_id as articulo3_1_2_, articulosp1_.cantidad as cantidad2_1_2_, articulosp1_.pedido_id as pedido_i4_1_2_, articulo2_.id as id1_0_3_, articulo2_.id_catalogo as id_catal5_0_3_, articulo2_.descripcion as descripc2_0_3_, articulo2_.nombre as nombre3_0_3_, articulo2_.precio as precio4_0_3_ from pedidos pedido0_ left outer join articulos_pedidos articulosp1_ on pedido0_.id=articulosp1_.pedido_id left outer join articulos articulo2_ on articulosp1_.articulo_id=articulo2_.id where pedido0_.id=?
2020-12-10 10:00:51,070 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 10:00:51,072 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 10:00:52,204 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-4] PedidosREST.getPedidos 
2020-12-10 10:00:52,206 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-4] PedidoServiceImpl.findAll 
2020-12-10 10:00:52,207 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] select pedido0_.id as id1_3_, pedido0_.nombre as nombre2_3_, pedido0_.total as total3_3_ from pedidos pedido0_
2020-12-10 10:00:52,209 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] select articulosp0_.pedido_id as pedido_i4_1_0_, articulosp0_.id as id1_1_0_, articulosp0_.id as id1_1_1_, articulosp0_.articulo_id as articulo3_1_1_, articulosp0_.cantidad as cantidad2_1_1_, articulosp0_.pedido_id as pedido_i4_1_1_, articulo1_.id as id1_0_2_, articulo1_.id_catalogo as id_catal5_0_2_, articulo1_.descripcion as descripc2_0_2_, articulo1_.nombre as nombre3_0_2_, articulo1_.precio as precio4_0_2_, catalogo2_.id as id1_2_3_, catalogo2_.nombre as nombre2_2_3_ from articulos_pedidos articulosp0_ left outer join articulos articulo1_ on articulosp0_.articulo_id=articulo1_.id left outer join catalogos catalogo2_ on articulo1_.id_catalogo=catalogo2_.id where articulosp0_.pedido_id=?
2020-12-10 10:01:42,636 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-6] PedidosREST.getPedidos 
2020-12-10 10:01:42,638 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-6] PedidoServiceImpl.findAll 
2020-12-10 10:01:42,640 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] select pedido0_.id as id1_3_, pedido0_.nombre as nombre2_3_, pedido0_.total as total3_3_ from pedidos pedido0_
2020-12-10 10:01:42,642 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] select articulosp0_.pedido_id as pedido_i4_1_0_, articulosp0_.id as id1_1_0_, articulosp0_.id as id1_1_1_, articulosp0_.articulo_id as articulo3_1_1_, articulosp0_.cantidad as cantidad2_1_1_, articulosp0_.pedido_id as pedido_i4_1_1_, articulo1_.id as id1_0_2_, articulo1_.id_catalogo as id_catal5_0_2_, articulo1_.descripcion as descripc2_0_2_, articulo1_.nombre as nombre3_0_2_, articulo1_.precio as precio4_0_2_, catalogo2_.id as id1_2_3_, catalogo2_.nombre as nombre2_2_3_ from articulos_pedidos articulosp0_ left outer join articulos articulo1_ on articulosp0_.articulo_id=articulo1_.id left outer join catalogos catalogo2_ on articulo1_.id_catalogo=catalogo2_.id where articulosp0_.pedido_id=?
2020-12-10 10:02:04,435 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-8] PedidosREST.getPedidos 
2020-12-10 10:02:04,439 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-8] PedidoServiceImpl.findAll 
2020-12-10 10:02:04,441 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] select pedido0_.id as id1_3_, pedido0_.nombre as nombre2_3_, pedido0_.total as total3_3_ from pedidos pedido0_
2020-12-10 10:02:04,444 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] select articulosp0_.pedido_id as pedido_i4_1_0_, articulosp0_.id as id1_1_0_, articulosp0_.id as id1_1_1_, articulosp0_.articulo_id as articulo3_1_1_, articulosp0_.cantidad as cantidad2_1_1_, articulosp0_.pedido_id as pedido_i4_1_1_, articulo1_.id as id1_0_2_, articulo1_.id_catalogo as id_catal5_0_2_, articulo1_.descripcion as descripc2_0_2_, articulo1_.nombre as nombre3_0_2_, articulo1_.precio as precio4_0_2_, catalogo2_.id as id1_2_3_, catalogo2_.nombre as nombre2_2_3_ from articulos_pedidos articulosp0_ left outer join articulos articulo1_ on articulosp0_.articulo_id=articulo1_.id left outer join catalogos catalogo2_ on articulo1_.id_catalogo=catalogo2_.id where articulosp0_.pedido_id=?
2020-12-10 10:02:37,125 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-10] PedidosREST.getPedidos 
2020-12-10 10:02:37,130 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-10] PedidoServiceImpl.findAll 
2020-12-10 10:02:37,133 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] select pedido0_.id as id1_3_, pedido0_.nombre as nombre2_3_, pedido0_.total as total3_3_ from pedidos pedido0_
2020-12-10 10:02:37,136 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] select articulosp0_.pedido_id as pedido_i4_1_0_, articulosp0_.id as id1_1_0_, articulosp0_.id as id1_1_1_, articulosp0_.articulo_id as articulo3_1_1_, articulosp0_.cantidad as cantidad2_1_1_, articulosp0_.pedido_id as pedido_i4_1_1_, articulo1_.id as id1_0_2_, articulo1_.id_catalogo as id_catal5_0_2_, articulo1_.descripcion as descripc2_0_2_, articulo1_.nombre as nombre3_0_2_, articulo1_.precio as precio4_0_2_, catalogo2_.id as id1_2_3_, catalogo2_.nombre as nombre2_2_3_ from articulos_pedidos articulosp0_ left outer join articulos articulo1_ on articulosp0_.articulo_id=articulo1_.id left outer join catalogos catalogo2_ on articulo1_.id_catalogo=catalogo2_.id where articulosp0_.pedido_id=?
2020-12-10 10:02:46,322 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-2] PedidosREST.getPedidos 
2020-12-10 10:02:46,325 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-2] PedidoServiceImpl.findAll 
2020-12-10 10:02:46,328 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] select pedido0_.id as id1_3_, pedido0_.nombre as nombre2_3_, pedido0_.total as total3_3_ from pedidos pedido0_
2020-12-10 10:02:46,331 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] select articulosp0_.pedido_id as pedido_i4_1_0_, articulosp0_.id as id1_1_0_, articulosp0_.id as id1_1_1_, articulosp0_.articulo_id as articulo3_1_1_, articulosp0_.cantidad as cantidad2_1_1_, articulosp0_.pedido_id as pedido_i4_1_1_, articulo1_.id as id1_0_2_, articulo1_.id_catalogo as id_catal5_0_2_, articulo1_.descripcion as descripc2_0_2_, articulo1_.nombre as nombre3_0_2_, articulo1_.precio as precio4_0_2_, catalogo2_.id as id1_2_3_, catalogo2_.nombre as nombre2_2_3_ from articulos_pedidos articulosp0_ left outer join articulos articulo1_ on articulosp0_.articulo_id=articulo1_.id left outer join catalogos catalogo2_ on articulo1_.id_catalogo=catalogo2_.id where articulosp0_.pedido_id=?
2020-12-10 10:03:30,182 DEBUG com.init.practica.service.Impl.UsuarioServiceImpl [http-nio-8080-exec-4] UsuarioServiceImpl.findByCredentials 
2020-12-10 10:03:30,213 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] select * from usuarios where usuario = ? and password = ? 
2020-12-10 10:03:39,178 DEBUG com.init.practica.service.Impl.UsuarioServiceImpl [http-nio-8080-exec-6] UsuarioServiceImpl.findByCredentials 
2020-12-10 10:03:39,179 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] select * from usuarios where usuario = ? and password = ? 
2020-12-10 10:03:39,719 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-8] PedidosREST.getPedidos 
2020-12-10 10:03:39,721 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-8] PedidoServiceImpl.findAll 
2020-12-10 10:03:39,722 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] select pedido0_.id as id1_3_, pedido0_.nombre as nombre2_3_, pedido0_.total as total3_3_ from pedidos pedido0_
2020-12-10 10:03:39,723 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] select articulosp0_.pedido_id as pedido_i4_1_0_, articulosp0_.id as id1_1_0_, articulosp0_.id as id1_1_1_, articulosp0_.articulo_id as articulo3_1_1_, articulosp0_.cantidad as cantidad2_1_1_, articulosp0_.pedido_id as pedido_i4_1_1_, articulo1_.id as id1_0_2_, articulo1_.id_catalogo as id_catal5_0_2_, articulo1_.descripcion as descripc2_0_2_, articulo1_.nombre as nombre3_0_2_, articulo1_.precio as precio4_0_2_, catalogo2_.id as id1_2_3_, catalogo2_.nombre as nombre2_2_3_ from articulos_pedidos articulosp0_ left outer join articulos articulo1_ on articulosp0_.articulo_id=articulo1_.id left outer join catalogos catalogo2_ on articulo1_.id_catalogo=catalogo2_.id where articulosp0_.pedido_id=?
2020-12-10 10:03:41,168 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-10] PedidosREST.getPedidoById 1
2020-12-10 10:03:41,169 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-10] PedidoServiceImpl.findById 1
2020-12-10 10:03:41,170 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] select pedido0_.id as id1_3_0_, pedido0_.nombre as nombre2_3_0_, pedido0_.total as total3_3_0_, articulosp1_.pedido_id as pedido_i4_1_1_, articulosp1_.id as id1_1_1_, articulosp1_.id as id1_1_2_, articulosp1_.articulo_id as articulo3_1_2_, articulosp1_.cantidad as cantidad2_1_2_, articulosp1_.pedido_id as pedido_i4_1_2_, articulo2_.id as id1_0_3_, articulo2_.id_catalogo as id_catal5_0_3_, articulo2_.descripcion as descripc2_0_3_, articulo2_.nombre as nombre3_0_3_, articulo2_.precio as precio4_0_3_ from pedidos pedido0_ left outer join articulos_pedidos articulosp1_ on pedido0_.id=articulosp1_.pedido_id left outer join articulos articulo2_ on articulosp1_.articulo_id=articulo2_.id where pedido0_.id=?
2020-12-10 10:03:41,173 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 10:03:41,175 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 10:03:42,529 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-1] PedidosREST.getPedidos 
2020-12-10 10:03:42,530 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-1] PedidoServiceImpl.findAll 
2020-12-10 10:03:42,531 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] select pedido0_.id as id1_3_, pedido0_.nombre as nombre2_3_, pedido0_.total as total3_3_ from pedidos pedido0_
2020-12-10 10:03:42,533 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] select articulosp0_.pedido_id as pedido_i4_1_0_, articulosp0_.id as id1_1_0_, articulosp0_.id as id1_1_1_, articulosp0_.articulo_id as articulo3_1_1_, articulosp0_.cantidad as cantidad2_1_1_, articulosp0_.pedido_id as pedido_i4_1_1_, articulo1_.id as id1_0_2_, articulo1_.id_catalogo as id_catal5_0_2_, articulo1_.descripcion as descripc2_0_2_, articulo1_.nombre as nombre3_0_2_, articulo1_.precio as precio4_0_2_, catalogo2_.id as id1_2_3_, catalogo2_.nombre as nombre2_2_3_ from articulos_pedidos articulosp0_ left outer join articulos articulo1_ on articulosp0_.articulo_id=articulo1_.id left outer join catalogos catalogo2_ on articulo1_.id_catalogo=catalogo2_.id where articulosp0_.pedido_id=?
2020-12-10 10:04:40,188 DEBUG com.init.practica.rest.CatalogosREST [http-nio-8080-exec-5] CatalogosREST.getCatalogos 
2020-12-10 10:04:40,189 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [http-nio-8080-exec-5] CatalogoServiceImpl.findAll 
2020-12-10 10:04:40,196 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] select catalogo0_.id as id1_2_, catalogo0_.nombre as nombre2_2_ from catalogos catalogo0_
2020-12-10 10:15:15,595 INFO org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [RMI TCP Connection(30)-127.0.0.1] Application shutdown requested.
2020-12-10 10:15:15,657 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [RMI TCP Connection(30)-127.0.0.1] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 10:15:15,660 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [RMI TCP Connection(30)-127.0.0.1] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-10 10:15:15,661 INFO com.zaxxer.hikari.HikariDataSource [RMI TCP Connection(30)-127.0.0.1] HikariPool-1 - Shutdown initiated...
2020-12-10 10:15:15,670 INFO com.zaxxer.hikari.HikariDataSource [RMI TCP Connection(30)-127.0.0.1] HikariPool-1 - Shutdown completed.
2020-12-10 10:50:59,432 INFO org.springframework.boot.StartupInfoLogger [main] Starting PracticaRicohApplication using Java 15 on zango-Laptop with PID 26837 (/home/jose/Documents/workspace/practica-ricoh/target/classes started by jose in /home/jose/Documents/workspace/practica-ricoh)
2020-12-10 10:50:59,438 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.0, Spring v5.3.1
2020-12-10 10:50:59,441 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-12-10 10:51:00,576 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-12-10 10:51:00,642 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 56 ms. Found 5 JPA repository interfaces.
2020-12-10 10:51:01,289 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2020-12-10 10:51:01,299 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-10 10:51:01,300 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-12-10 10:51:01,300 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-10 10:51:01,431 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-12-10 10:51:01,431 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1806 ms
2020-12-10 10:51:01,641 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-10 10:51:01,725 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-10 10:51:02,105 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2020-12-10 10:51:02,365 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-12-10 10:51:02,711 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2020-12-10 10:51:03,030 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e23ee0e, org.springframework.security.web.context.SecurityContextPersistenceFilter@3275a47f, org.springframework.security.web.header.HeaderWriterFilter@49925d21, org.springframework.security.web.authentication.logout.LogoutFilter@6fc7e828, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@417446d9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2e0163cb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3e8afc2d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@b144175, org.springframework.security.web.session.SessionManagementFilter@46ee7013, org.springframework.security.web.access.ExceptionTranslationFilter@309cf657, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@508f4bb5]
2020-12-10 10:51:03,112 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2020-12-10 10:51:03,155 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-10 10:51:03,156 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-12-10 10:51:03,189 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-12-10 10:51:03,252 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-12-10 10:51:03,590 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: getPedidosUsingGET_1
2020-12-10 10:51:03,613 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositoriesâ€¦
2020-12-10 10:51:03,747 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos add constraint FK8r1qc7hc6cptxa9ix70bq6s9i foreign key (id_catalogo) references catalogos (id)
2020-12-10 10:51:03,756 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FKompdlvftht1y6hrugptq64amu foreign key (articulo_id) references articulos (id)
2020-12-10 10:51:03,761 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FK1w5fxh8hfyqcy8fmq65cf486u foreign key (pedido_id) references pedidos (id)
2020-12-10 10:51:03,774 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 10:51:04,066 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-12-10 10:51:04,075 INFO org.springframework.boot.StartupInfoLogger [main] Started PracticaRicohApplication in 5.297 seconds (JVM running for 6.371)
2020-12-10 10:51:08,507 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-10 10:51:08,507 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2020-12-10 10:51:08,509 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 2 ms
2020-12-10 11:24:01,339 INFO org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [RMI TCP Connection(36)-127.0.0.1] Application shutdown requested.
2020-12-10 11:24:01,403 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [RMI TCP Connection(36)-127.0.0.1] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 11:24:01,404 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [RMI TCP Connection(36)-127.0.0.1] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-10 11:24:01,405 INFO com.zaxxer.hikari.HikariDataSource [RMI TCP Connection(36)-127.0.0.1] HikariPool-1 - Shutdown initiated...
2020-12-10 11:24:01,410 INFO com.zaxxer.hikari.HikariDataSource [RMI TCP Connection(36)-127.0.0.1] HikariPool-1 - Shutdown completed.
2020-12-10 11:24:46,614 INFO org.springframework.boot.StartupInfoLogger [main] Starting PracticaRicohApplication using Java 15 on zango-Laptop with PID 27561 (/home/jose/Documents/workspace/practica-ricoh/target/classes started by jose in /home/jose/Documents/workspace/practica-ricoh)
2020-12-10 11:24:46,617 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.0, Spring v5.3.1
2020-12-10 11:24:46,618 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-12-10 11:24:47,639 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-12-10 11:24:47,712 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 63 ms. Found 5 JPA repository interfaces.
2020-12-10 11:24:48,414 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2020-12-10 11:24:48,425 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-10 11:24:48,426 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-12-10 11:24:48,427 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-10 11:24:48,557 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-12-10 11:24:48,557 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1878 ms
2020-12-10 11:24:48,780 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-10 11:24:48,869 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-10 11:24:49,254 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2020-12-10 11:24:49,487 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-12-10 11:24:49,799 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2020-12-10 11:24:50,086 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e23ee0e, org.springframework.security.web.context.SecurityContextPersistenceFilter@3275a47f, org.springframework.security.web.header.HeaderWriterFilter@49925d21, org.springframework.security.web.authentication.logout.LogoutFilter@6fc7e828, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@417446d9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2e0163cb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3e8afc2d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@b144175, org.springframework.security.web.session.SessionManagementFilter@46ee7013, org.springframework.security.web.access.ExceptionTranslationFilter@309cf657, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@508f4bb5]
2020-12-10 11:24:50,220 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2020-12-10 11:24:50,274 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-10 11:24:50,277 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-12-10 11:24:50,307 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-12-10 11:24:50,403 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-12-10 11:24:50,823 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: getPedidosUsingGET_1
2020-12-10 11:24:50,849 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositoriesâ€¦
2020-12-10 11:24:51,053 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos add constraint FK8r1qc7hc6cptxa9ix70bq6s9i foreign key (id_catalogo) references catalogos (id)
2020-12-10 11:24:51,062 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FKompdlvftht1y6hrugptq64amu foreign key (articulo_id) references articulos (id)
2020-12-10 11:24:51,067 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FK1w5fxh8hfyqcy8fmq65cf486u foreign key (pedido_id) references pedidos (id)
2020-12-10 11:24:51,079 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 11:24:51,388 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-12-10 11:24:51,403 INFO org.springframework.boot.StartupInfoLogger [main] Started PracticaRicohApplication in 5.292 seconds (JVM running for 6.186)
2020-12-10 11:25:27,184 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-10 11:25:27,184 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Initializing Servlet 'dispatcherServlet'
2020-12-10 11:25:27,187 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Completed initialization in 3 ms
2020-12-10 11:25:27,606 DEBUG com.init.practica.rest.CatalogosREST [http-nio-8080-exec-2] CatalogosREST.getCatalogoloById 1
2020-12-10 11:25:27,606 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [http-nio-8080-exec-2] CatalogoServiceImpl.findById 1
2020-12-10 11:25:27,637 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:25:36,731 DEBUG com.init.practica.rest.CatalogosREST [http-nio-8080-exec-4] CatalogosREST.getCatalogos 
2020-12-10 11:25:36,731 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [http-nio-8080-exec-4] CatalogoServiceImpl.findAll 
2020-12-10 11:25:36,886 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] select catalogo0_.id as id1_2_, catalogo0_.nombre as nombre2_2_ from catalogos catalogo0_
2020-12-10 11:26:09,748 DEBUG com.init.practica.rest.CatalogosREST [http-nio-8080-exec-6] CatalogosREST.createCatalogo Catalogo{id=null', nombre='CÃ¡talogo promociones'}
2020-12-10 11:26:09,748 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [http-nio-8080-exec-6] CatalogoServiceImpl.create Catalogo{id=null', nombre='CÃ¡talogo promociones'}
2020-12-10 11:26:09,765 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] insert into catalogos (nombre) values (?)
2020-12-10 11:26:26,444 DEBUG com.init.practica.rest.CatalogosREST [http-nio-8080-exec-7] CatalogosREST.createCatalogo Catalogo{id=4', nombre='CÃ¡talogo promocionessss'}
2020-12-10 11:26:26,445 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [http-nio-8080-exec-7] CatalogoServiceImpl.create Catalogo{id=4', nombre='CÃ¡talogo promocionessss'}
2020-12-10 11:26:26,457 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:26:26,468 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] update catalogos set nombre=? where id=?
2020-12-10 11:26:33,349 DEBUG com.init.practica.rest.CatalogosREST [http-nio-8080-exec-8] CatalogosREST.getCatalogoloById 4
2020-12-10 11:26:33,349 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [http-nio-8080-exec-8] CatalogoServiceImpl.findById 4
2020-12-10 11:26:33,352 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:26:41,056 DEBUG com.init.practica.rest.CatalogosREST [http-nio-8080-exec-9] CatalogosREST.deleteCatalogo 1
2020-12-10 11:26:41,057 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [http-nio-8080-exec-9] CatalogoServiceImpl.findById 1
2020-12-10 11:26:41,060 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:26:41,085 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [http-nio-8080-exec-9] CatalogoServiceImpl.deleteById 1
2020-12-10 11:26:41,128 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] select * from articulos where id_catalogo = ?
2020-12-10 11:26:46,240 DEBUG com.init.practica.rest.CatalogosREST [http-nio-8080-exec-10] CatalogosREST.deleteCatalogo 4
2020-12-10 11:26:46,241 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [http-nio-8080-exec-10] CatalogoServiceImpl.findById 4
2020-12-10 11:26:46,244 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:26:46,252 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [http-nio-8080-exec-10] CatalogoServiceImpl.deleteById 4
2020-12-10 11:26:46,254 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] select * from articulos where id_catalogo = ?
2020-12-10 11:26:46,267 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] delete from catalogos where id=?
2020-12-10 11:26:51,999 DEBUG com.init.practica.rest.CatalogosREST [http-nio-8080-exec-1] CatalogosREST.getCatalogos 
2020-12-10 11:26:51,999 DEBUG com.init.practica.service.Impl.CatalogoServiceImpl [http-nio-8080-exec-1] CatalogoServiceImpl.findAll 
2020-12-10 11:26:52,004 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] select catalogo0_.id as id1_2_, catalogo0_.nombre as nombre2_2_ from catalogos catalogo0_
2020-12-10 11:27:12,743 DEBUG com.init.practica.rest.ArticulosREST [http-nio-8080-exec-2] ArticulosREST.getArticulos
2020-12-10 11:27:12,758 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [http-nio-8080-exec-2] ArticuloServiceImpl.findAll
2020-12-10 11:27:12,763 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] select articulo0_.id as id1_0_, articulo0_.id_catalogo as id_catal5_0_, articulo0_.descripcion as descripc2_0_, articulo0_.nombre as nombre3_0_, articulo0_.precio as precio4_0_ from articulos articulo0_
2020-12-10 11:27:12,766 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:27:12,769 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:27:12,772 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:27:16,152 DEBUG com.init.practica.rest.ArticulosREST [http-nio-8080-exec-3] ArticulosREST.getArticuloById 1
2020-12-10 11:27:16,155 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [http-nio-8080-exec-3] ArticuloServiceImpl.findById
2020-12-10 11:27:16,157 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 11:27:39,650 DEBUG com.init.practica.rest.ArticulosREST [http-nio-8080-exec-4] ArticulosREST.updateArticulo Articulo{id=null, nombre='Articulo 111', descripcion='DescripciÃ³n 1', catalogo='CatÃ¡logo bÃ¡sico'125
2020-12-10 11:27:39,652 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [http-nio-8080-exec-4] ArticuloServiceImpl.update Articulo{id=null, nombre='Articulo 111', descripcion='DescripciÃ³n 1', catalogo='CatÃ¡logo bÃ¡sico'125
2020-12-10 11:27:39,664 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-4] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!] with root cause
java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:269)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:524)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:531)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:156)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:131)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:371)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy125.findById(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy78.findById(Unknown Source)
	at com.init.practica.service.Impl.ArticuloServiceImpl.update(ArticuloServiceImpl.java:65)
	at com.init.practica.service.Impl.ArticuloServiceImpl$$FastClassBySpringCGLIB$$522f56b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:371)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.init.practica.service.Impl.ArticuloServiceImpl$$EnhancerBySpringCGLIB$$646e407f.update(<generated>)
	at com.init.practica.rest.ArticulosREST.updateArticulo(ArticulosREST.java:86)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:178)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-12-10 11:27:45,845 DEBUG com.init.practica.rest.ArticulosREST [http-nio-8080-exec-6] ArticulosREST.createArticulo Articulo{id=null, nombre='Articulo 111', descripcion='DescripciÃ³n 1', catalogo='CatÃ¡logo bÃ¡sico'125
2020-12-10 11:27:45,847 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [http-nio-8080-exec-6] ArticuloServiceImpl.create
2020-12-10 11:27:45,851 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] insert into articulos (id_catalogo, descripcion, nombre, precio) values (?, ?, ?, ?)
2020-12-10 11:27:52,647 DEBUG com.init.practica.rest.ArticulosREST [http-nio-8080-exec-7] ArticulosREST.getArticuloById 7
2020-12-10 11:27:52,650 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [http-nio-8080-exec-7] ArticuloServiceImpl.findById
2020-12-10 11:27:52,651 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 11:28:02,375 DEBUG com.init.practica.rest.ArticulosREST [http-nio-8080-exec-8] ArticulosREST.getArticuloById 7
2020-12-10 11:28:02,378 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [http-nio-8080-exec-8] ArticuloServiceImpl.findById
2020-12-10 11:28:02,379 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 11:28:07,386 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-9] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2020-12-10 11:28:15,143 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-10] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PUT' not supported]
2020-12-10 11:28:29,061 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-1] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2020-12-10 11:29:12,696 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-2] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PUT' not supported]
2020-12-10 11:29:34,834 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-3] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PUT' not supported]
2020-12-10 11:30:10,272 WARN org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer [main] 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/home/jose/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/home/jose/.m2/repository/org/json/json/20180130/json-20180130.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2020-12-10 11:30:10,299 INFO org.springframework.boot.StartupInfoLogger [main] Starting PracticaRicohApplicationTests using Java 15 on zango-Laptop with PID 27768 (started by jose in /home/jose/Documents/workspace/practica-ricoh)
2020-12-10 11:30:10,302 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.0, Spring v5.3.1
2020-12-10 11:30:10,318 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-12-10 11:30:11,865 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-12-10 11:30:11,964 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 88 ms. Found 5 JPA repository interfaces.
2020-12-10 11:30:12,946 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-10 11:30:13,136 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-10 11:30:13,609 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2020-12-10 11:30:14,309 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2020-12-10 11:30:14,653 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-12-10 11:30:15,923 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos add constraint FK8r1qc7hc6cptxa9ix70bq6s9i foreign key (id_catalogo) references catalogos (id)
2020-12-10 11:30:15,954 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FKompdlvftht1y6hrugptq64amu foreign key (articulo_id) references articulos (id)
2020-12-10 11:30:15,962 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table articulos_pedidos add constraint FK1w5fxh8hfyqcy8fmq65cf486u foreign key (pedido_id) references pedidos (id)
2020-12-10 11:30:15,995 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 11:30:16,213 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5e46a125, org.springframework.security.web.context.SecurityContextPersistenceFilter@2052f095, org.springframework.security.web.header.HeaderWriterFilter@2d2af12e, org.springframework.security.web.authentication.logout.LogoutFilter@67b3960b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@53079ae6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3580134d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@264576e4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5831989d, org.springframework.security.web.session.SessionManagementFilter@6ab1f85b, org.springframework.security.web.access.ExceptionTranslationFilter@731ab49b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@24010875]
2020-12-10 11:30:16,319 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-12-10 11:30:16,348 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-12-10 11:30:16,424 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-12-10 11:30:16,782 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: getPedidosUsingGET_1
2020-12-10 11:30:16,807 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositoriesâ€¦
2020-12-10 11:30:17,359 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-12-10 11:30:17,371 INFO org.springframework.boot.StartupInfoLogger [main] Started PracticaRicohApplicationTests in 7.699 seconds (JVM running for 9.335)
2020-12-10 11:30:17,746 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [main] ArticuloServiceImpl.findById
2020-12-10 11:30:17,766 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 11:30:17,808 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [main] ArticuloServiceImpl.update Articulo{id=1, nombre='Articulo 1', descripcion='descripcion modificada', catalogo='CatÃ¡logo bÃ¡sico'125
2020-12-10 11:30:17,810 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 11:30:17,842 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [main] update articulos set id_catalogo=?, descripcion=?, nombre=?, precio=? where id=?
2020-12-10 11:30:17,897 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringContextShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-10 11:30:17,900 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-10 11:30:17,901 INFO com.zaxxer.hikari.HikariDataSource [SpringContextShutdownHook] HikariPool-1 - Shutdown initiated...
2020-12-10 11:30:17,916 INFO com.zaxxer.hikari.HikariDataSource [SpringContextShutdownHook] HikariPool-1 - Shutdown completed.
2020-12-10 11:30:42,675 DEBUG com.init.practica.rest.ArticulosREST [http-nio-8080-exec-6] ArticulosREST.updateArticulo Articulo{id=7, nombre='Articulo 111', descripcion='DescripciÃ³n 12', catalogo='CatÃ¡logo bÃ¡sico'125
2020-12-10 11:30:42,679 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [http-nio-8080-exec-6] ArticuloServiceImpl.update Articulo{id=7, nombre='Articulo 111', descripcion='DescripciÃ³n 12', catalogo='CatÃ¡logo bÃ¡sico'125
2020-12-10 11:30:42,681 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 11:30:42,687 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] update articulos set id_catalogo=?, descripcion=?, nombre=?, precio=? where id=?
2020-12-10 11:30:57,670 DEBUG com.init.practica.rest.ArticulosREST [http-nio-8080-exec-7] ArticulosREST.getArticuloById 7
2020-12-10 11:30:57,672 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [http-nio-8080-exec-7] ArticuloServiceImpl.findById
2020-12-10 11:30:57,673 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 11:31:02,485 DEBUG com.init.practica.rest.ArticulosREST [http-nio-8080-exec-8] ArticulosREST.deleteArticulo 7
2020-12-10 11:31:02,488 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [http-nio-8080-exec-8] ArticuloServiceImpl.findById
2020-12-10 11:31:02,489 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 11:31:02,497 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] select a.* from articulos as a inner join articulos_pedidos as ap on ap.articulo_id = a.id where articulo_id =  ?
2020-12-10 11:31:02,502 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [http-nio-8080-exec-8] ArticuloServiceImpl.delete 7
2020-12-10 11:31:02,505 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] delete from articulos where id=?
2020-12-10 11:31:09,710 DEBUG com.init.practica.rest.ArticulosREST [http-nio-8080-exec-9] ArticulosREST.deleteArticulo 1
2020-12-10 11:31:09,712 DEBUG com.init.practica.service.Impl.ArticuloServiceImpl [http-nio-8080-exec-9] ArticuloServiceImpl.findById
2020-12-10 11:31:09,714 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] select articulo0_.id as id1_0_0_, articulo0_.id_catalogo as id_catal5_0_0_, articulo0_.descripcion as descripc2_0_0_, articulo0_.nombre as nombre3_0_0_, articulo0_.precio as precio4_0_0_, catalogo1_.id as id1_2_1_, catalogo1_.nombre as nombre2_2_1_ from articulos articulo0_ inner join catalogos catalogo1_ on articulo0_.id_catalogo=catalogo1_.id where articulo0_.id=?
2020-12-10 11:31:09,724 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] select a.* from articulos as a inner join articulos_pedidos as ap on ap.articulo_id = a.id where articulo_id =  ?
2020-12-10 11:31:19,465 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-10] PedidosREST.getPedidoById 1
2020-12-10 11:31:19,473 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-10] PedidoServiceImpl.findById 1
2020-12-10 11:31:19,475 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] select pedido0_.id as id1_3_0_, pedido0_.nombre as nombre2_3_0_, pedido0_.total as total3_3_0_, articulosp1_.pedido_id as pedido_i4_1_1_, articulosp1_.id as id1_1_1_, articulosp1_.id as id1_1_2_, articulosp1_.articulo_id as articulo3_1_2_, articulosp1_.cantidad as cantidad2_1_2_, articulosp1_.pedido_id as pedido_i4_1_2_, articulo2_.id as id1_0_3_, articulo2_.id_catalogo as id_catal5_0_3_, articulo2_.descripcion as descripc2_0_3_, articulo2_.nombre as nombre3_0_3_, articulo2_.precio as precio4_0_3_ from pedidos pedido0_ left outer join articulos_pedidos articulosp1_ on pedido0_.id=articulosp1_.pedido_id left outer join articulos articulo2_ on articulosp1_.articulo_id=articulo2_.id where pedido0_.id=?
2020-12-10 11:31:19,483 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:31:19,486 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:31:23,536 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-1] PedidosREST.getPedidos 
2020-12-10 11:31:23,538 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-1] PedidoServiceImpl.findAll 
2020-12-10 11:31:23,545 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] select pedido0_.id as id1_3_, pedido0_.nombre as nombre2_3_, pedido0_.total as total3_3_ from pedidos pedido0_
2020-12-10 11:31:23,553 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] select articulosp0_.pedido_id as pedido_i4_1_0_, articulosp0_.id as id1_1_0_, articulosp0_.id as id1_1_1_, articulosp0_.articulo_id as articulo3_1_1_, articulosp0_.cantidad as cantidad2_1_1_, articulosp0_.pedido_id as pedido_i4_1_1_, articulo1_.id as id1_0_2_, articulo1_.id_catalogo as id_catal5_0_2_, articulo1_.descripcion as descripc2_0_2_, articulo1_.nombre as nombre3_0_2_, articulo1_.precio as precio4_0_2_, catalogo2_.id as id1_2_3_, catalogo2_.nombre as nombre2_2_3_ from articulos_pedidos articulosp0_ left outer join articulos articulo1_ on articulosp0_.articulo_id=articulo1_.id left outer join catalogos catalogo2_ on articulo1_.id_catalogo=catalogo2_.id where articulosp0_.pedido_id=?
2020-12-10 11:31:31,290 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-2] PedidosREST.getPedidoById 1
2020-12-10 11:31:31,292 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-2] PedidoServiceImpl.findById 1
2020-12-10 11:31:31,293 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] select pedido0_.id as id1_3_0_, pedido0_.nombre as nombre2_3_0_, pedido0_.total as total3_3_0_, articulosp1_.pedido_id as pedido_i4_1_1_, articulosp1_.id as id1_1_1_, articulosp1_.id as id1_1_2_, articulosp1_.articulo_id as articulo3_1_2_, articulosp1_.cantidad as cantidad2_1_2_, articulosp1_.pedido_id as pedido_i4_1_2_, articulo2_.id as id1_0_3_, articulo2_.id_catalogo as id_catal5_0_3_, articulo2_.descripcion as descripc2_0_3_, articulo2_.nombre as nombre3_0_3_, articulo2_.precio as precio4_0_3_ from pedidos pedido0_ left outer join articulos_pedidos articulosp1_ on pedido0_.id=articulosp1_.pedido_id left outer join articulos articulo2_ on articulosp1_.articulo_id=articulo2_.id where pedido0_.id=?
2020-12-10 11:31:31,296 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:31:31,301 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:31:56,058 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-3] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2020-12-10 11:32:01,036 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-4] PedidosREST.createPedido Pedido{id=null, nombre='Inicial', total='52.0'}
2020-12-10 11:32:01,037 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-4] PedidoServiceImpl.create Pedido{id=null, nombre='Inicial', total='52.0'}
2020-12-10 11:32:01,040 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] insert into pedidos (nombre, total) values (?, ?)
2020-12-10 11:32:01,043 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] insert into articulos_pedidos (articulo_id, cantidad, pedido_id) values (?, ?, ?)
2020-12-10 11:32:01,051 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] insert into articulos_pedidos (articulo_id, cantidad, pedido_id) values (?, ?, ?)
2020-12-10 11:32:01,054 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] insert into articulos_pedidos (articulo_id, cantidad, pedido_id) values (?, ?, ?)
2020-12-10 11:32:01,061 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] update articulos_pedidos set articulo_id=?, cantidad=?, pedido_id=? where id=?
2020-12-10 11:32:01,063 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] update articulos_pedidos set articulo_id=?, cantidad=?, pedido_id=? where id=?
2020-12-10 11:32:01,065 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] update articulos_pedidos set articulo_id=?, cantidad=?, pedido_id=? where id=?
2020-12-10 11:32:07,904 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-5] PedidosREST.updatePedido Pedido{id=null, nombre='Inicial 2', total='52.0'}
2020-12-10 11:32:07,906 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-5] PedidoServiceImpl.update Pedido{id=null, nombre='Inicial 2', total='52.0'}
2020-12-10 11:32:07,910 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-5] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!] with root cause
java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:269)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:524)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:531)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:156)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:131)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:371)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy123.findById(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy80.findById(Unknown Source)
	at com.init.practica.service.Impl.PedidoServiceImpl.update(PedidoServiceImpl.java:64)
	at com.init.practica.service.Impl.PedidoServiceImpl$$FastClassBySpringCGLIB$$b6b38d01.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:371)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.init.practica.service.Impl.PedidoServiceImpl$$EnhancerBySpringCGLIB$$2dd87501.update(<generated>)
	at com.init.practica.rest.PedidosREST.updatePedido(PedidosREST.java:92)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:178)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-12-10 11:32:18,873 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-7] PedidosREST.getPedidoById 2
2020-12-10 11:32:18,877 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-7] PedidoServiceImpl.findById 2
2020-12-10 11:32:18,879 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] select pedido0_.id as id1_3_0_, pedido0_.nombre as nombre2_3_0_, pedido0_.total as total3_3_0_, articulosp1_.pedido_id as pedido_i4_1_1_, articulosp1_.id as id1_1_1_, articulosp1_.id as id1_1_2_, articulosp1_.articulo_id as articulo3_1_2_, articulosp1_.cantidad as cantidad2_1_2_, articulosp1_.pedido_id as pedido_i4_1_2_, articulo2_.id as id1_0_3_, articulo2_.id_catalogo as id_catal5_0_3_, articulo2_.descripcion as descripc2_0_3_, articulo2_.nombre as nombre3_0_3_, articulo2_.precio as precio4_0_3_ from pedidos pedido0_ left outer join articulos_pedidos articulosp1_ on pedido0_.id=articulosp1_.pedido_id left outer join articulos articulo2_ on articulosp1_.articulo_id=articulo2_.id where pedido0_.id=?
2020-12-10 11:32:18,888 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:32:18,891 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:32:32,123 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-8] PedidosREST.getPedidoById 2
2020-12-10 11:32:32,124 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-8] PedidoServiceImpl.findById 2
2020-12-10 11:32:32,126 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] select pedido0_.id as id1_3_0_, pedido0_.nombre as nombre2_3_0_, pedido0_.total as total3_3_0_, articulosp1_.pedido_id as pedido_i4_1_1_, articulosp1_.id as id1_1_1_, articulosp1_.id as id1_1_2_, articulosp1_.articulo_id as articulo3_1_2_, articulosp1_.cantidad as cantidad2_1_2_, articulosp1_.pedido_id as pedido_i4_1_2_, articulo2_.id as id1_0_3_, articulo2_.id_catalogo as id_catal5_0_3_, articulo2_.descripcion as descripc2_0_3_, articulo2_.nombre as nombre3_0_3_, articulo2_.precio as precio4_0_3_ from pedidos pedido0_ left outer join articulos_pedidos articulosp1_ on pedido0_.id=articulosp1_.pedido_id left outer join articulos articulo2_ on articulosp1_.articulo_id=articulo2_.id where pedido0_.id=?
2020-12-10 11:32:32,132 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:32:32,135 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:32:40,593 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-9] PedidosREST.updatePedido Pedido{id=2, nombre='Inicial 2', total='52.0'}
2020-12-10 11:32:40,594 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-9] PedidoServiceImpl.update Pedido{id=2, nombre='Inicial 2', total='52.0'}
2020-12-10 11:32:40,595 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] select pedido0_.id as id1_3_0_, pedido0_.nombre as nombre2_3_0_, pedido0_.total as total3_3_0_, articulosp1_.pedido_id as pedido_i4_1_1_, articulosp1_.id as id1_1_1_, articulosp1_.id as id1_1_2_, articulosp1_.articulo_id as articulo3_1_2_, articulosp1_.cantidad as cantidad2_1_2_, articulosp1_.pedido_id as pedido_i4_1_2_, articulo2_.id as id1_0_3_, articulo2_.id_catalogo as id_catal5_0_3_, articulo2_.descripcion as descripc2_0_3_, articulo2_.nombre as nombre3_0_3_, articulo2_.precio as precio4_0_3_ from pedidos pedido0_ left outer join articulos_pedidos articulosp1_ on pedido0_.id=articulosp1_.pedido_id left outer join articulos articulo2_ on articulosp1_.articulo_id=articulo2_.id where pedido0_.id=?
2020-12-10 11:32:40,599 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:32:40,601 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:32:40,607 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] update pedidos set nombre=?, total=? where id=?
2020-12-10 11:32:46,617 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-10] PedidosREST.getPedidoById 2
2020-12-10 11:32:46,619 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-10] PedidoServiceImpl.findById 2
2020-12-10 11:32:46,620 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] select pedido0_.id as id1_3_0_, pedido0_.nombre as nombre2_3_0_, pedido0_.total as total3_3_0_, articulosp1_.pedido_id as pedido_i4_1_1_, articulosp1_.id as id1_1_1_, articulosp1_.id as id1_1_2_, articulosp1_.articulo_id as articulo3_1_2_, articulosp1_.cantidad as cantidad2_1_2_, articulosp1_.pedido_id as pedido_i4_1_2_, articulo2_.id as id1_0_3_, articulo2_.id_catalogo as id_catal5_0_3_, articulo2_.descripcion as descripc2_0_3_, articulo2_.nombre as nombre3_0_3_, articulo2_.precio as precio4_0_3_ from pedidos pedido0_ left outer join articulos_pedidos articulosp1_ on pedido0_.id=articulosp1_.pedido_id left outer join articulos articulo2_ on articulosp1_.articulo_id=articulo2_.id where pedido0_.id=?
2020-12-10 11:32:46,624 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:32:46,630 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:33:14,180 DEBUG com.init.practica.service.Impl.UsuarioServiceImpl [http-nio-8080-exec-2] UsuarioServiceImpl.findByCredentials 
2020-12-10 11:33:14,182 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] select * from usuarios where usuario = ? and password = ? 
2020-12-10 11:33:14,690 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-4] PedidosREST.getPedidos 
2020-12-10 11:33:14,691 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-4] PedidoServiceImpl.findAll 
2020-12-10 11:33:14,692 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] select pedido0_.id as id1_3_, pedido0_.nombre as nombre2_3_, pedido0_.total as total3_3_ from pedidos pedido0_
2020-12-10 11:33:14,694 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] select articulosp0_.pedido_id as pedido_i4_1_0_, articulosp0_.id as id1_1_0_, articulosp0_.id as id1_1_1_, articulosp0_.articulo_id as articulo3_1_1_, articulosp0_.cantidad as cantidad2_1_1_, articulosp0_.pedido_id as pedido_i4_1_1_, articulo1_.id as id1_0_2_, articulo1_.id_catalogo as id_catal5_0_2_, articulo1_.descripcion as descripc2_0_2_, articulo1_.nombre as nombre3_0_2_, articulo1_.precio as precio4_0_2_, catalogo2_.id as id1_2_3_, catalogo2_.nombre as nombre2_2_3_ from articulos_pedidos articulosp0_ left outer join articulos articulo1_ on articulosp0_.articulo_id=articulo1_.id left outer join catalogos catalogo2_ on articulo1_.id_catalogo=catalogo2_.id where articulosp0_.pedido_id=?
2020-12-10 11:33:14,697 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] select articulosp0_.pedido_id as pedido_i4_1_0_, articulosp0_.id as id1_1_0_, articulosp0_.id as id1_1_1_, articulosp0_.articulo_id as articulo3_1_1_, articulosp0_.cantidad as cantidad2_1_1_, articulosp0_.pedido_id as pedido_i4_1_1_, articulo1_.id as id1_0_2_, articulo1_.id_catalogo as id_catal5_0_2_, articulo1_.descripcion as descripc2_0_2_, articulo1_.nombre as nombre3_0_2_, articulo1_.precio as precio4_0_2_, catalogo2_.id as id1_2_3_, catalogo2_.nombre as nombre2_2_3_ from articulos_pedidos articulosp0_ left outer join articulos articulo1_ on articulosp0_.articulo_id=articulo1_.id left outer join catalogos catalogo2_ on articulo1_.id_catalogo=catalogo2_.id where articulosp0_.pedido_id=?
2020-12-10 11:33:17,513 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-6] PedidosREST.getPedidoById 2
2020-12-10 11:33:17,514 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-6] PedidoServiceImpl.findById 2
2020-12-10 11:33:17,515 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] select pedido0_.id as id1_3_0_, pedido0_.nombre as nombre2_3_0_, pedido0_.total as total3_3_0_, articulosp1_.pedido_id as pedido_i4_1_1_, articulosp1_.id as id1_1_1_, articulosp1_.id as id1_1_2_, articulosp1_.articulo_id as articulo3_1_2_, articulosp1_.cantidad as cantidad2_1_2_, articulosp1_.pedido_id as pedido_i4_1_2_, articulo2_.id as id1_0_3_, articulo2_.id_catalogo as id_catal5_0_3_, articulo2_.descripcion as descripc2_0_3_, articulo2_.nombre as nombre3_0_3_, articulo2_.precio as precio4_0_3_ from pedidos pedido0_ left outer join articulos_pedidos articulosp1_ on pedido0_.id=articulosp1_.pedido_id left outer join articulos articulo2_ on articulosp1_.articulo_id=articulo2_.id where pedido0_.id=?
2020-12-10 11:33:17,519 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:33:17,520 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:33:19,415 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-8] PedidosREST.getPedidos 
2020-12-10 11:33:19,416 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-8] PedidoServiceImpl.findAll 
2020-12-10 11:33:19,417 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] select pedido0_.id as id1_3_, pedido0_.nombre as nombre2_3_, pedido0_.total as total3_3_ from pedidos pedido0_
2020-12-10 11:33:19,420 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] select articulosp0_.pedido_id as pedido_i4_1_0_, articulosp0_.id as id1_1_0_, articulosp0_.id as id1_1_1_, articulosp0_.articulo_id as articulo3_1_1_, articulosp0_.cantidad as cantidad2_1_1_, articulosp0_.pedido_id as pedido_i4_1_1_, articulo1_.id as id1_0_2_, articulo1_.id_catalogo as id_catal5_0_2_, articulo1_.descripcion as descripc2_0_2_, articulo1_.nombre as nombre3_0_2_, articulo1_.precio as precio4_0_2_, catalogo2_.id as id1_2_3_, catalogo2_.nombre as nombre2_2_3_ from articulos_pedidos articulosp0_ left outer join articulos articulo1_ on articulosp0_.articulo_id=articulo1_.id left outer join catalogos catalogo2_ on articulo1_.id_catalogo=catalogo2_.id where articulosp0_.pedido_id=?
2020-12-10 11:33:19,423 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] select articulosp0_.pedido_id as pedido_i4_1_0_, articulosp0_.id as id1_1_0_, articulosp0_.id as id1_1_1_, articulosp0_.articulo_id as articulo3_1_1_, articulosp0_.cantidad as cantidad2_1_1_, articulosp0_.pedido_id as pedido_i4_1_1_, articulo1_.id as id1_0_2_, articulo1_.id_catalogo as id_catal5_0_2_, articulo1_.descripcion as descripc2_0_2_, articulo1_.nombre as nombre3_0_2_, articulo1_.precio as precio4_0_2_, catalogo2_.id as id1_2_3_, catalogo2_.nombre as nombre2_2_3_ from articulos_pedidos articulosp0_ left outer join articulos articulo1_ on articulosp0_.articulo_id=articulo1_.id left outer join catalogos catalogo2_ on articulo1_.id_catalogo=catalogo2_.id where articulosp0_.pedido_id=?
2020-12-10 11:33:20,608 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-10] PedidosREST.getPedidoById 1
2020-12-10 11:33:20,609 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-10] PedidoServiceImpl.findById 1
2020-12-10 11:33:20,610 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] select pedido0_.id as id1_3_0_, pedido0_.nombre as nombre2_3_0_, pedido0_.total as total3_3_0_, articulosp1_.pedido_id as pedido_i4_1_1_, articulosp1_.id as id1_1_1_, articulosp1_.id as id1_1_2_, articulosp1_.articulo_id as articulo3_1_2_, articulosp1_.cantidad as cantidad2_1_2_, articulosp1_.pedido_id as pedido_i4_1_2_, articulo2_.id as id1_0_3_, articulo2_.id_catalogo as id_catal5_0_3_, articulo2_.descripcion as descripc2_0_3_, articulo2_.nombre as nombre3_0_3_, articulo2_.precio as precio4_0_3_ from pedidos pedido0_ left outer join articulos_pedidos articulosp1_ on pedido0_.id=articulosp1_.pedido_id left outer join articulos articulo2_ on articulosp1_.articulo_id=articulo2_.id where pedido0_.id=?
2020-12-10 11:33:20,612 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:33:20,614 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:33:21,551 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-2] PedidosREST.getPedidos 
2020-12-10 11:33:21,552 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-2] PedidoServiceImpl.findAll 
2020-12-10 11:33:21,553 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] select pedido0_.id as id1_3_, pedido0_.nombre as nombre2_3_, pedido0_.total as total3_3_ from pedidos pedido0_
2020-12-10 11:33:21,556 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] select articulosp0_.pedido_id as pedido_i4_1_0_, articulosp0_.id as id1_1_0_, articulosp0_.id as id1_1_1_, articulosp0_.articulo_id as articulo3_1_1_, articulosp0_.cantidad as cantidad2_1_1_, articulosp0_.pedido_id as pedido_i4_1_1_, articulo1_.id as id1_0_2_, articulo1_.id_catalogo as id_catal5_0_2_, articulo1_.descripcion as descripc2_0_2_, articulo1_.nombre as nombre3_0_2_, articulo1_.precio as precio4_0_2_, catalogo2_.id as id1_2_3_, catalogo2_.nombre as nombre2_2_3_ from articulos_pedidos articulosp0_ left outer join articulos articulo1_ on articulosp0_.articulo_id=articulo1_.id left outer join catalogos catalogo2_ on articulo1_.id_catalogo=catalogo2_.id where articulosp0_.pedido_id=?
2020-12-10 11:33:21,560 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] select articulosp0_.pedido_id as pedido_i4_1_0_, articulosp0_.id as id1_1_0_, articulosp0_.id as id1_1_1_, articulosp0_.articulo_id as articulo3_1_1_, articulosp0_.cantidad as cantidad2_1_1_, articulosp0_.pedido_id as pedido_i4_1_1_, articulo1_.id as id1_0_2_, articulo1_.id_catalogo as id_catal5_0_2_, articulo1_.descripcion as descripc2_0_2_, articulo1_.nombre as nombre3_0_2_, articulo1_.precio as precio4_0_2_, catalogo2_.id as id1_2_3_, catalogo2_.nombre as nombre2_2_3_ from articulos_pedidos articulosp0_ left outer join articulos articulo1_ on articulosp0_.articulo_id=articulo1_.id left outer join catalogos catalogo2_ on articulo1_.id_catalogo=catalogo2_.id where articulosp0_.pedido_id=?
2020-12-10 11:33:30,248 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-3] PedidosREST.deletePedido 2
2020-12-10 11:33:30,251 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-3] PedidoServiceImpl.findById 2
2020-12-10 11:33:30,252 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] select pedido0_.id as id1_3_0_, pedido0_.nombre as nombre2_3_0_, pedido0_.total as total3_3_0_, articulosp1_.pedido_id as pedido_i4_1_1_, articulosp1_.id as id1_1_1_, articulosp1_.id as id1_1_2_, articulosp1_.articulo_id as articulo3_1_2_, articulosp1_.cantidad as cantidad2_1_2_, articulosp1_.pedido_id as pedido_i4_1_2_, articulo2_.id as id1_0_3_, articulo2_.id_catalogo as id_catal5_0_3_, articulo2_.descripcion as descripc2_0_3_, articulo2_.nombre as nombre3_0_3_, articulo2_.precio as precio4_0_3_ from pedidos pedido0_ left outer join articulos_pedidos articulosp1_ on pedido0_.id=articulosp1_.pedido_id left outer join articulos articulo2_ on articulosp1_.articulo_id=articulo2_.id where pedido0_.id=?
2020-12-10 11:33:30,256 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:33:30,258 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:33:30,263 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-3] PedidoServiceImpl.deleteById 2
2020-12-10 11:33:30,270 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] delete from articulos_pedidos where id=?
2020-12-10 11:33:30,272 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] delete from articulos_pedidos where id=?
2020-12-10 11:33:30,274 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] delete from articulos_pedidos where id=?
2020-12-10 11:33:30,275 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] delete from pedidos where id=?
2020-12-10 11:33:39,959 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-5] PedidosREST.getPedidos 
2020-12-10 11:33:39,961 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-5] PedidoServiceImpl.findAll 
2020-12-10 11:33:39,962 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] select pedido0_.id as id1_3_, pedido0_.nombre as nombre2_3_, pedido0_.total as total3_3_ from pedidos pedido0_
2020-12-10 11:33:39,965 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] select articulosp0_.pedido_id as pedido_i4_1_0_, articulosp0_.id as id1_1_0_, articulosp0_.id as id1_1_1_, articulosp0_.articulo_id as articulo3_1_1_, articulosp0_.cantidad as cantidad2_1_1_, articulosp0_.pedido_id as pedido_i4_1_1_, articulo1_.id as id1_0_2_, articulo1_.id_catalogo as id_catal5_0_2_, articulo1_.descripcion as descripc2_0_2_, articulo1_.nombre as nombre3_0_2_, articulo1_.precio as precio4_0_2_, catalogo2_.id as id1_2_3_, catalogo2_.nombre as nombre2_2_3_ from articulos_pedidos articulosp0_ left outer join articulos articulo1_ on articulosp0_.articulo_id=articulo1_.id left outer join catalogos catalogo2_ on articulo1_.id_catalogo=catalogo2_.id where articulosp0_.pedido_id=?
2020-12-10 11:33:41,271 DEBUG com.init.practica.rest.PedidosREST [http-nio-8080-exec-7] PedidosREST.getPedidoById 1
2020-12-10 11:33:41,272 DEBUG com.init.practica.service.Impl.PedidoServiceImpl [http-nio-8080-exec-7] PedidoServiceImpl.findById 1
2020-12-10 11:33:41,273 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] select pedido0_.id as id1_3_0_, pedido0_.nombre as nombre2_3_0_, pedido0_.total as total3_3_0_, articulosp1_.pedido_id as pedido_i4_1_1_, articulosp1_.id as id1_1_1_, articulosp1_.id as id1_1_2_, articulosp1_.articulo_id as articulo3_1_2_, articulosp1_.cantidad as cantidad2_1_2_, articulosp1_.pedido_id as pedido_i4_1_2_, articulo2_.id as id1_0_3_, articulo2_.id_catalogo as id_catal5_0_3_, articulo2_.descripcion as descripc2_0_3_, articulo2_.nombre as nombre3_0_3_, articulo2_.precio as precio4_0_3_ from pedidos pedido0_ left outer join articulos_pedidos articulosp1_ on pedido0_.id=articulosp1_.pedido_id left outer join articulos articulo2_ on articulosp1_.articulo_id=articulo2_.id where pedido0_.id=?
2020-12-10 11:33:41,276 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
2020-12-10 11:33:41,277 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] select catalogo0_.id as id1_2_0_, catalogo0_.nombre as nombre2_2_0_ from catalogos catalogo0_ where catalogo0_.id=?
